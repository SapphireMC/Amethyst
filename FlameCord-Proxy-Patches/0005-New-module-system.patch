From 124f013260e2fa6c3721a5f8253de9c48834f08e Mon Sep 17 00:00:00 2001
From: Denary Planet <denaryplanet@gmail.com>
Date: Sun, 11 Jul 2021 04:13:30 +0500
Subject: [PATCH] New module system


diff --git a/flame/src/main/java/dev/_2lstudios/flamecord/configuration/MessagesConfiguration.java b/flame/src/main/java/dev/_2lstudios/flamecord/configuration/MessagesConfiguration.java
index 643b7487..eb2f7340 100644
--- a/flame/src/main/java/dev/_2lstudios/flamecord/configuration/MessagesConfiguration.java
+++ b/flame/src/main/java/dev/_2lstudios/flamecord/configuration/MessagesConfiguration.java
@@ -35,12 +35,14 @@ public class MessagesConfiguration {
 			setIfUnexistant( "command_alert", "&8&l[&4&lОбьявление&8&l] &c&l", configuration );
 			setIfUnexistant( "command_find_online_at", "&eИгрок &6{0} &eиграет на сервере &6{1}", configuration );
 			setIfUnexistant( "command_firewall_info","&eСуществует &6{0} &eадресов брандмауэра. Брандмауэр очистится через &6{1} &eсек.", configuration );
-			setIfUnexistant( "command_flamecord_usage", "&cИспользуйте /flame help для просмотра доступных команд", configuration );
-			setIfUnexistant( "command_flamecord_help", """
+			setIfUnexistant( "command_bungee_usage", "&cИспользуйте /bungee help для просмотра доступных команд", configuration );
+			setIfUnexistant( "command_bungee_help", """
 					&7&m-----------------&r&7&l(&5Amethyst&7&l)&r&7&m-----------------
-					&8&l* &6/flame firewall &7- &eПоказывает информацию о брандмауэре!
-					&8&l* &6/flame help &7- &eПоказывает это сообщение!
-					&8&l* &6/flame about &7- &eИнформация про Amethyst
+					&8&l* &6/bungee firewall &7- &eПоказывает информацию о
+					&e   брандмауэре.
+					&8&l* &6/bungee about &7- &eПоказывает информацию про
+					&e   ядро сервера.
+					&8&l* &6/bungee help &7- &eПоказывает это сообщение!
 					""", configuration );
 			setIfUnexistant( "command_ip", "&eIP игрока &6{0}&e: &6{1}", configuration );
 			setIfUnexistant( "command_list_header", """
diff --git a/flame/src/main/java/dev/_2lstudios/flamecord/configuration/ModulesConfiguration.java b/flame/src/main/java/dev/_2lstudios/flamecord/configuration/ModulesConfiguration.java
index e82c4844..7aed8dd8 100644
--- a/flame/src/main/java/dev/_2lstudios/flamecord/configuration/ModulesConfiguration.java
+++ b/flame/src/main/java/dev/_2lstudios/flamecord/configuration/ModulesConfiguration.java
@@ -13,6 +13,9 @@ public class ModulesConfiguration {
         // Alert Module
         public boolean alertEnabled = true;
 
+        // AlertRaw Module
+        public boolean alertRawEnabled = true;
+
         // Find Module
         public boolean findEnabled = true;
 
@@ -49,6 +52,8 @@ public class ModulesConfiguration {
 
                         this.alertEnabled = setIfUnexistant("alert.enabled", this.alertEnabled, configuration);
 
+                        this.alertRawEnabled = setIfUnexistant("alertraw.enabled", this.alertRawEnabled, configuration);
+
                         this.findEnabled = setIfUnexistant("find.enabled", this.findEnabled, configuration);
 
                         this.ipEnabled = setIfUnexistant("ip.enabled", this.ipEnabled, configuration);
@@ -74,10 +79,6 @@ public class ModulesConfiguration {
                 }
         }
 
-        private String setIfUnexistant(final String arg1, final String arg2, final Configuration configuration) {
-                return (String) setIfUnexistant(arg1, (Object) arg2, configuration);
-        }
-
         private boolean setIfUnexistant(final String arg1, final boolean arg2, final Configuration configuration) {
                 return (boolean) setIfUnexistant(arg1, (Object) arg2, configuration);
         }
diff --git a/module/cmd-alert/pom.xml b/module/cmd-alert/pom.xml
deleted file mode 100644
index 22ddba1e..00000000
--- a/module/cmd-alert/pom.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-
-    <parent>
-        <groupId>io.sapphiremc.amethyst</groupId>
-        <artifactId>amethyst-module</artifactId>
-        <version>1.18.1-R0.1-SNAPSHOT</version>
-        <relativePath>../pom.xml</relativePath>
-    </parent>
-
-    <artifactId>amethyst-module-cmd-alert</artifactId>
-    <version>1.18.1-R0.1-SNAPSHOT</version>
-    <packaging>jar</packaging>
-
-    <name>cmd_alert</name>
-    <description>Provides the alert and alertraw commands</description>
-</project>
diff --git a/module/cmd-alert/src/main/java/net/md_5/bungee/module/cmd/alert/PluginAlert.java b/module/cmd-alert/src/main/java/net/md_5/bungee/module/cmd/alert/PluginAlert.java
deleted file mode 100644
index b6f84865..00000000
--- a/module/cmd-alert/src/main/java/net/md_5/bungee/module/cmd/alert/PluginAlert.java
+++ /dev/null
@@ -1,14 +0,0 @@
-package net.md_5.bungee.module.cmd.alert;
-
-import net.md_5.bungee.api.plugin.Plugin;
-
-public class PluginAlert extends Plugin
-{
-
-    @Override
-    public void onEnable()
-    {
-        getProxy().getPluginManager().registerCommand( this, new CommandAlert() );
-        getProxy().getPluginManager().registerCommand( this, new CommandAlertRaw() );
-    }
-}
diff --git a/module/cmd-alert/src/main/resources/plugin.yml b/module/cmd-alert/src/main/resources/plugin.yml
deleted file mode 100644
index 9dcf1704..00000000
--- a/module/cmd-alert/src/main/resources/plugin.yml
+++ /dev/null
@@ -1,5 +0,0 @@
-name: ${project.name}
-main: net.md_5.bungee.module.cmd.alert.PluginAlert
-version: ${project.version}
-description: ${project.description}
-author: ${module.author}
diff --git a/module/cmd-find/pom.xml b/module/cmd-find/pom.xml
deleted file mode 100644
index 0a32e75c..00000000
--- a/module/cmd-find/pom.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-
-    <parent>
-        <groupId>io.sapphiremc.amethyst</groupId>
-        <artifactId>amethyst-module</artifactId>
-        <version>1.18.1-R0.1-SNAPSHOT</version>
-        <relativePath>../pom.xml</relativePath>
-    </parent>
-
-    <artifactId>amethyst-module-cmd-find</artifactId>
-    <version>1.18.1-R0.1-SNAPSHOT</version>
-    <packaging>jar</packaging>
-
-    <name>cmd_find</name>
-    <description>Provides the find command</description>
-</project>
diff --git a/module/cmd-find/src/main/java/net/md_5/bungee/module/cmd/find/PluginFind.java b/module/cmd-find/src/main/java/net/md_5/bungee/module/cmd/find/PluginFind.java
deleted file mode 100644
index 63757214..00000000
--- a/module/cmd-find/src/main/java/net/md_5/bungee/module/cmd/find/PluginFind.java
+++ /dev/null
@@ -1,13 +0,0 @@
-package net.md_5.bungee.module.cmd.find;
-
-import net.md_5.bungee.api.plugin.Plugin;
-
-public class PluginFind extends Plugin
-{
-
-    @Override
-    public void onEnable()
-    {
-        getProxy().getPluginManager().registerCommand( this, new CommandFind() );
-    }
-}
diff --git a/module/cmd-find/src/main/resources/plugin.yml b/module/cmd-find/src/main/resources/plugin.yml
deleted file mode 100644
index 34efb98d..00000000
--- a/module/cmd-find/src/main/resources/plugin.yml
+++ /dev/null
@@ -1,5 +0,0 @@
-name: ${project.name}
-main: net.md_5.bungee.module.cmd.find.PluginFind
-version: ${project.version}
-description: ${project.description}
-author: ${module.author}
diff --git a/module/cmd-list/pom.xml b/module/cmd-list/pom.xml
deleted file mode 100644
index d6615975..00000000
--- a/module/cmd-list/pom.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-
-    <parent>
-        <groupId>io.sapphiremc.amethyst</groupId>
-        <artifactId>amethyst-module</artifactId>
-        <version>1.18.1-R0.1-SNAPSHOT</version>
-        <relativePath>../pom.xml</relativePath>
-    </parent>
-
-    <artifactId>amethyst-module-cmd-list</artifactId>
-    <version>1.18.1-R0.1-SNAPSHOT</version>
-    <packaging>jar</packaging>
-
-    <name>cmd_list</name>
-    <description>Provides the glist command</description>
-</project>
diff --git a/module/cmd-list/src/main/java/net/md_5/bungee/module/cmd/list/PluginList.java b/module/cmd-list/src/main/java/net/md_5/bungee/module/cmd/list/PluginList.java
deleted file mode 100644
index e2a196c1..00000000
--- a/module/cmd-list/src/main/java/net/md_5/bungee/module/cmd/list/PluginList.java
+++ /dev/null
@@ -1,13 +0,0 @@
-package net.md_5.bungee.module.cmd.list;
-
-import net.md_5.bungee.api.plugin.Plugin;
-
-public class PluginList extends Plugin
-{
-
-    @Override
-    public void onEnable()
-    {
-        getProxy().getPluginManager().registerCommand( this, new CommandList() );
-    }
-}
diff --git a/module/cmd-list/src/main/resources/plugin.yml b/module/cmd-list/src/main/resources/plugin.yml
deleted file mode 100644
index c5999f77..00000000
--- a/module/cmd-list/src/main/resources/plugin.yml
+++ /dev/null
@@ -1,5 +0,0 @@
-name: ${project.name}
-main: net.md_5.bungee.module.cmd.list.PluginList
-version: ${project.version}
-description: ${project.description}
-author: ${module.author}
diff --git a/module/cmd-send/pom.xml b/module/cmd-send/pom.xml
deleted file mode 100644
index 93411a38..00000000
--- a/module/cmd-send/pom.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-
-    <parent>
-        <groupId>io.sapphiremc.amethyst</groupId>
-        <artifactId>amethyst-module</artifactId>
-        <version>1.18.1-R0.1-SNAPSHOT</version>
-        <relativePath>../pom.xml</relativePath>
-    </parent>
-
-    <artifactId>amethyst-module-cmd-send</artifactId>
-    <version>1.18.1-R0.1-SNAPSHOT</version>
-    <packaging>jar</packaging>
-
-    <name>cmd_send</name>
-    <description>Provides the gsend command</description>
-</project>
diff --git a/module/cmd-send/src/main/java/net/md_5/bungee/module/cmd/send/PluginSend.java b/module/cmd-send/src/main/java/net/md_5/bungee/module/cmd/send/PluginSend.java
deleted file mode 100644
index 4d4cf822..00000000
--- a/module/cmd-send/src/main/java/net/md_5/bungee/module/cmd/send/PluginSend.java
+++ /dev/null
@@ -1,13 +0,0 @@
-package net.md_5.bungee.module.cmd.send;
-
-import net.md_5.bungee.api.plugin.Plugin;
-
-public class PluginSend extends Plugin
-{
-
-    @Override
-    public void onEnable()
-    {
-        getProxy().getPluginManager().registerCommand( this, new CommandSend() );
-    }
-}
diff --git a/module/cmd-send/src/main/resources/plugin.yml b/module/cmd-send/src/main/resources/plugin.yml
deleted file mode 100644
index 8f0d0edd..00000000
--- a/module/cmd-send/src/main/resources/plugin.yml
+++ /dev/null
@@ -1,5 +0,0 @@
-name: ${project.name}
-main: net.md_5.bungee.module.cmd.send.PluginSend
-version: ${project.version}
-description: ${project.description}
-author: ${module.author}
diff --git a/module/cmd-server/pom.xml b/module/cmd-server/pom.xml
deleted file mode 100644
index 56a2a18f..00000000
--- a/module/cmd-server/pom.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-
-    <parent>
-        <groupId>io.sapphiremc.amethyst</groupId>
-        <artifactId>amethyst-module</artifactId>
-        <version>1.18.1-R0.1-SNAPSHOT</version>
-        <relativePath>../pom.xml</relativePath>
-    </parent>
-
-    <artifactId>amethyst-module-cmd-server</artifactId>
-    <version>1.18.1-R0.1-SNAPSHOT</version>
-    <packaging>jar</packaging>
-
-    <name>cmd_server</name>
-    <description>Provides the server command</description>
-</project>
diff --git a/module/cmd-server/src/main/java/net/md_5/bungee/module/cmd/server/PluginServer.java b/module/cmd-server/src/main/java/net/md_5/bungee/module/cmd/server/PluginServer.java
deleted file mode 100644
index 4aaae7ec..00000000
--- a/module/cmd-server/src/main/java/net/md_5/bungee/module/cmd/server/PluginServer.java
+++ /dev/null
@@ -1,13 +0,0 @@
-package net.md_5.bungee.module.cmd.server;
-
-import net.md_5.bungee.api.plugin.Plugin;
-
-public class PluginServer extends Plugin
-{
-
-    @Override
-    public void onEnable()
-    {
-        getProxy().getPluginManager().registerCommand( this, new CommandServer() );
-    }
-}
diff --git a/module/cmd-server/src/main/resources/plugin.yml b/module/cmd-server/src/main/resources/plugin.yml
deleted file mode 100644
index b0b87841..00000000
--- a/module/cmd-server/src/main/resources/plugin.yml
+++ /dev/null
@@ -1,5 +0,0 @@
-name: ${project.name}
-main: net.md_5.bungee.module.cmd.server.PluginServer
-version: ${project.version}
-description: ${project.description}
-author: ${module.author}
diff --git a/module/pom.xml b/module/pom.xml
deleted file mode 100644
index 0a4cb1e9..00000000
--- a/module/pom.xml
+++ /dev/null
@@ -1,53 +0,0 @@
-
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-
-    <parent>
-        <groupId>io.sapphiremc.amethyst</groupId>
-        <artifactId>amethyst-parent</artifactId>
-        <version>1.18.1-R0.1-SNAPSHOT</version>
-        <relativePath>../pom.xml</relativePath>
-    </parent>
-
-    <artifactId>amethyst-module</artifactId>
-    <version>1.18.1-R0.1-SNAPSHOT</version>
-    <packaging>pom</packaging>
-
-    <name>Amethyst-Modules</name>
-    <description>Parent project for all Amethyst modules.</description>
-
-    <modules>
-        <module>cmd-alert</module>
-        <module>cmd-find</module>
-        <module>cmd-list</module>
-        <module>cmd-send</module>
-        <module>cmd-server</module>
-        <module>reconnect-yaml</module>
-    </modules>
-
-    <properties>
-        <module.author>AmethystMC</module.author>
-        <maven.deploy.skip>true</maven.deploy.skip>
-        <maven.javadoc.skip>true</maven.javadoc.skip>
-    </properties>
-
-    <dependencies>
-        <dependency>
-            <groupId>${project.groupId}</groupId>
-            <artifactId>amethyst-api</artifactId>
-            <version>${project.version}</version>
-            <scope>compile</scope>
-        </dependency>
-    </dependencies>
-
-    <build>
-        <finalName>${project.name}</finalName>
-        <resources>
-            <resource>
-                <filtering>true</filtering>
-                <directory>${basedir}/src/main/resources</directory>
-            </resource>
-        </resources>
-    </build>
-</project>
diff --git a/module/reconnect-yaml/pom.xml b/module/reconnect-yaml/pom.xml
deleted file mode 100644
index 80dd0fc2..00000000
--- a/module/reconnect-yaml/pom.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-
-    <parent>
-        <groupId>io.sapphiremc.amethyst</groupId>
-        <artifactId>amethyst-module</artifactId>
-        <version>1.18.1-R0.1-SNAPSHOT</version>
-        <relativePath>../pom.xml</relativePath>
-    </parent>
-
-    <artifactId>amethyst-module-reconnect-yaml</artifactId>
-    <version>1.18.1-R0.1-SNAPSHOT</version>
-    <packaging>jar</packaging>
-
-    <name>reconnect_yaml</name>
-    <description>Provides reconnect location functionality in locations.yml</description>
-</project>
diff --git a/module/reconnect-yaml/src/main/java/net/md_5/bungee/module/reconnect/yaml/PluginYaml.java b/module/reconnect-yaml/src/main/java/net/md_5/bungee/module/reconnect/yaml/PluginYaml.java
deleted file mode 100644
index 0d77ce2a..00000000
--- a/module/reconnect-yaml/src/main/java/net/md_5/bungee/module/reconnect/yaml/PluginYaml.java
+++ /dev/null
@@ -1,22 +0,0 @@
-package net.md_5.bungee.module.reconnect.yaml;
-
-import net.md_5.bungee.api.config.ListenerInfo;
-import net.md_5.bungee.api.plugin.Plugin;
-
-public class PluginYaml extends Plugin
-{
-
-    @Override
-    public void onEnable()
-    {
-        // TODO: Abstract this for other reconnect modules
-        for ( ListenerInfo info : getProxy().getConfig().getListeners() )
-        {
-            if ( !info.isForceDefault() && getProxy().getReconnectHandler() == null )
-            {
-                getProxy().setReconnectHandler( new YamlReconnectHandler() );
-                break;
-            }
-        }
-    }
-}
diff --git a/module/reconnect-yaml/src/main/resources/plugin.yml b/module/reconnect-yaml/src/main/resources/plugin.yml
deleted file mode 100644
index 9757ba83..00000000
--- a/module/reconnect-yaml/src/main/resources/plugin.yml
+++ /dev/null
@@ -1,5 +0,0 @@
-name: ${project.name}
-main: net.md_5.bungee.module.reconnect.yaml.PluginYaml
-version: ${project.version}
-description: ${project.description}
-author: ${module.author}
diff --git a/pom.xml b/pom.xml
index 14d01ccf..d893927f 100644
--- a/pom.xml
+++ b/pom.xml
@@ -40,7 +40,9 @@
         <module>event</module>
         <module>log</module>
         <module>log4j</module>
+        <!-- Amethyst - use our module system
         <module>module</module>
+        -->
         <module>protocol</module>
         <module>proxy</module>
         <module>query</module>
diff --git a/proxy/pom.xml b/proxy/pom.xml
index 54e029d8..1b5c5e01 100644
--- a/proxy/pom.xml
+++ b/proxy/pom.xml
@@ -157,6 +157,7 @@
             <version>${project.version}</version>
             <scope>compile</scope>
         </dependency>
+        <!-- Amethyst - use our module system
         <dependency>
             <groupId>${project.groupId}</groupId>
             <artifactId>amethyst-module-cmd-alert</artifactId>
@@ -193,6 +194,7 @@
             <version>${project.version}</version>
             <scope>compile</scope>
         </dependency>
+        -->
         <!-- FlameCord end -->
     </dependencies>
 
diff --git a/proxy/src/main/java/dev/_2lstudios/flamecord/commands/FlameCordCommand.java b/proxy/src/main/java/dev/_2lstudios/flamecord/commands/FlameCordCommand.java
deleted file mode 100644
index 19e31e9c..00000000
--- a/proxy/src/main/java/dev/_2lstudios/flamecord/commands/FlameCordCommand.java
+++ /dev/null
@@ -1,72 +0,0 @@
-package dev._2lstudios.flamecord.commands;
-
-import java.util.Collection;
-import java.util.HashSet;
-
-import dev._2lstudios.flamecord.FlameCord;
-import dev._2lstudios.flamecord.configuration.MessagesConfiguration;
-import dev._2lstudios.flamecord.firewall.FirewallManager;
-import net.md_5.bungee.BungeeCord;
-import net.md_5.bungee.api.CommandSender;
-import net.md_5.bungee.api.chat.TextComponent;
-import net.md_5.bungee.api.config.ServerInfo;
-import net.md_5.bungee.api.plugin.Command;
-
-public class FlameCordCommand extends Command
-{
-
-    private final BungeeCord bungeeCord;
-
-    public FlameCordCommand(final BungeeCord bungeeCord)
-    {
-        super( "flamecord", "bungeecord.command.flamecord", "flame" );
-
-        this.bungeeCord = bungeeCord;
-    }
-
-    @Override
-    public void execute(final CommandSender sender, final String[] args)
-    {
-        final FlameCord flameCord = FlameCord.getInstance();
-        final MessagesConfiguration messagesConfiguration = flameCord.getMessagesConfiguration();
-
-        if (args.length > 0)
-        {
-            final String arg0 = args[0];
-
-            switch (arg0)
-            {
-                case "firewall":
-                {
-                    final FirewallManager firewallManager = flameCord.getFirewallManager();
-                    final int amount = firewallManager.getFirewalled().size(), seconds = firewallManager.getSeconds();
-
-                    sender.sendMessage( TextComponent.fromLegacyText( messagesConfiguration.getTranslation( "command_firewall_info", amount, seconds ) ) );
-                    break;
-                }
-                case "reload":
-                {
-                    // FlameCord - Collect ips from servers
-                    final Collection<String> whitelistedAddresses = new HashSet<>();
-
-                    for ( final ServerInfo serverInfo : bungeeCord.getServers().values() )
-                    {
-                        whitelistedAddresses.add( serverInfo.getSocketAddress().toString() );
-                    }
-
-                    FlameCord.renew( bungeeCord.getLogger(), whitelistedAddresses );
-                    sender.sendMessage( TextComponent.fromLegacyText( messagesConfiguration.getTranslation( "command_reload" ) ) );
-                    break;
-                }
-                default:
-                {
-                    sender.sendMessage( TextComponent.fromLegacyText( messagesConfiguration.getTranslation( "command_flamecord_help", bungeeCord.getVersion() ) ) );
-                    break;
-                }
-            }
-            } else
-            {
-            sender.sendMessage( TextComponent.fromLegacyText( messagesConfiguration.getTranslation( "command_flamecord_help", bungeeCord.getVersion() ) ) );
-        }
-    }
-}
diff --git a/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java b/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
index ff4bbf34..1b34d6bd 100644
--- a/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
+++ b/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
@@ -1,6 +1,5 @@
 package io.github.waterfallmc.waterfall.conf;
 
-import com.google.common.base.Joiner;
 import net.md_5.bungee.conf.Configuration;
 import net.md_5.bungee.conf.YamlConfig;
 import net.md_5.bungee.protocol.ProtocolConstants;
diff --git a/module/cmd-alert/src/main/java/net/md_5/bungee/module/cmd/alert/CommandAlert.java b/proxy/src/main/java/io/sapphiremc/amethyst/module/CommandAlert.java
similarity index 67%
rename from module/cmd-alert/src/main/java/net/md_5/bungee/module/cmd/alert/CommandAlert.java
rename to proxy/src/main/java/io/sapphiremc/amethyst/module/CommandAlert.java
index 3d95b789..5a8317a7 100644
--- a/module/cmd-alert/src/main/java/net/md_5/bungee/module/cmd/alert/CommandAlert.java
+++ b/proxy/src/main/java/io/sapphiremc/amethyst/module/CommandAlert.java
@@ -1,8 +1,8 @@
-package net.md_5.bungee.module.cmd.alert;
+package io.sapphiremc.amethyst.module;
 
+import net.md_5.bungee.BungeeCord;
 import net.md_5.bungee.api.ChatColor;
 import net.md_5.bungee.api.CommandSender;
-import net.md_5.bungee.api.ProxyServer;
 import net.md_5.bungee.api.chat.TextComponent;
 import net.md_5.bungee.api.plugin.Command;
 
@@ -19,17 +19,17 @@ public class CommandAlert extends Command
     {
         if ( args.length == 0 )
         {
-            sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "command_alert_message_needed" ) );
+            sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_alert_message_needed" ) );
         } else
         {
             StringBuilder builder = new StringBuilder();
             if ( args[0].startsWith( "&h" ) )
             {
                 // Remove &h
-                args[0] = args[0].substring( 2, args[0].length() );
+                args[0] = args[0].substring( 2 );
             } else
             {
-                builder.append( ProxyServer.getInstance().getTranslation( "command_alert" ) );
+                builder.append( BungeeCord.getInstance().getTranslation( "command_alert" ) );
             }
 
             for ( String s : args )
@@ -40,7 +40,7 @@ public class CommandAlert extends Command
 
             String message = builder.substring( 0, builder.length() - 1 );
 
-            ProxyServer.getInstance().broadcast( TextComponent.fromLegacyText( message ) );
+            BungeeCord.getInstance().broadcast( TextComponent.fromLegacyText( message ) );
         }
     }
 }
diff --git a/module/cmd-alert/src/main/java/net/md_5/bungee/module/cmd/alert/CommandAlertRaw.java b/proxy/src/main/java/io/sapphiremc/amethyst/module/CommandAlertRaw.java
similarity index 68%
rename from module/cmd-alert/src/main/java/net/md_5/bungee/module/cmd/alert/CommandAlertRaw.java
rename to proxy/src/main/java/io/sapphiremc/amethyst/module/CommandAlertRaw.java
index 4bbe525b..8aafd30f 100644
--- a/module/cmd-alert/src/main/java/net/md_5/bungee/module/cmd/alert/CommandAlertRaw.java
+++ b/proxy/src/main/java/io/sapphiremc/amethyst/module/CommandAlertRaw.java
@@ -1,9 +1,9 @@
-package net.md_5.bungee.module.cmd.alert;
+package io.sapphiremc.amethyst.module;
 
 import com.google.common.base.Joiner;
+import net.md_5.bungee.BungeeCord;
 import net.md_5.bungee.api.ChatColor;
 import net.md_5.bungee.api.CommandSender;
-import net.md_5.bungee.api.ProxyServer;
 import net.md_5.bungee.api.chat.ComponentBuilder;
 import net.md_5.bungee.api.chat.HoverEvent;
 import net.md_5.bungee.api.connection.ProxiedPlayer;
@@ -15,7 +15,7 @@ public class CommandAlertRaw extends Command
 
     public CommandAlertRaw()
     {
-        super( "alertraw", "bungeecord.command.alert" );
+        super( "alertraw", "bungeecord.command.alertraw" );
     }
 
     @Override
@@ -23,14 +23,14 @@ public class CommandAlertRaw extends Command
     {
         if ( args.length == 0 )
         {
-            sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "command_alert_message_needed" ) );
+            sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_alert_message_needed" ) );
         } else
         {
             String message = Joiner.on( ' ' ).join( args );
 
             try
             {
-                ProxyServer.getInstance().broadcast( ComponentSerializer.parse( message ) );
+                BungeeCord.getInstance().broadcast( ComponentSerializer.parse( message ) );
             } catch ( Exception e )
             {
                 Throwable error = e;
@@ -40,7 +40,7 @@ public class CommandAlertRaw extends Command
                 }
                 if ( sender instanceof ProxiedPlayer )
                 {
-                    sender.sendMessage( new ComponentBuilder( ProxyServer.getInstance().getTranslation( "error_message_player" ) )
+                    sender.sendMessage( new ComponentBuilder( BungeeCord.getInstance().getTranslation( "error_message_player" ) )
                             .event( new HoverEvent( HoverEvent.Action.SHOW_TEXT, new ComponentBuilder( error.getMessage() )
                                     .color( ChatColor.RED )
                                     .create() ) )
@@ -48,7 +48,7 @@ public class CommandAlertRaw extends Command
                     );
                 } else
                 {
-                    sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "error_message_console", error.getMessage() ) );
+                    sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "error_message_console", error.getMessage() ) );
                 }
             }
         }
diff --git a/module/cmd-find/src/main/java/net/md_5/bungee/module/cmd/find/CommandFind.java b/proxy/src/main/java/io/sapphiremc/amethyst/module/CommandFind.java
similarity index 50%
rename from module/cmd-find/src/main/java/net/md_5/bungee/module/cmd/find/CommandFind.java
rename to proxy/src/main/java/io/sapphiremc/amethyst/module/CommandFind.java
index 42debad6..e4261e7f 100644
--- a/module/cmd-find/src/main/java/net/md_5/bungee/module/cmd/find/CommandFind.java
+++ b/proxy/src/main/java/io/sapphiremc/amethyst/module/CommandFind.java
@@ -1,7 +1,7 @@
-package net.md_5.bungee.module.cmd.find;
+package io.sapphiremc.amethyst.module;
 
+import net.md_5.bungee.BungeeCord;
 import net.md_5.bungee.api.CommandSender;
-import net.md_5.bungee.api.ProxyServer;
 import net.md_5.bungee.api.connection.ProxiedPlayer;
 import net.md_5.bungee.command.PlayerCommand;
 
@@ -18,16 +18,16 @@ public class CommandFind extends PlayerCommand
     {
         if ( args.length != 1 )
         {
-            sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "error_username_needed" ) );
+            sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "error_username_needed" ) );
         } else
         {
-            ProxiedPlayer player = ProxyServer.getInstance().getPlayer( args[0] );
+            ProxiedPlayer player = BungeeCord.getInstance().getPlayer( args[0] );
             if ( player == null || player.getServer() == null )
             {
-                sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "error_user_not_online" ) );
+                sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "error_user_not_online" ) );
             } else
             {
-                sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "command_find_online_at", player.getName(), player.getServer().getInfo().getName() ) );
+                sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_find_user_online_at", player.getName(), player.getServer().getInfo().getName() ) );
             }
         }
     }
diff --git a/module/cmd-list/src/main/java/net/md_5/bungee/module/cmd/list/CommandList.java b/proxy/src/main/java/io/sapphiremc/amethyst/module/CommandList.java
similarity index 50%
rename from module/cmd-list/src/main/java/net/md_5/bungee/module/cmd/list/CommandList.java
rename to proxy/src/main/java/io/sapphiremc/amethyst/module/CommandList.java
index 0334eb3c..e87b1c6e 100644
--- a/module/cmd-list/src/main/java/net/md_5/bungee/module/cmd/list/CommandList.java
+++ b/proxy/src/main/java/io/sapphiremc/amethyst/module/CommandList.java
@@ -1,19 +1,15 @@
-package net.md_5.bungee.module.cmd.list;
+package io.sapphiremc.amethyst.module;
 
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
+import net.md_5.bungee.BungeeCord;
 import net.md_5.bungee.Util;
-import net.md_5.bungee.api.ChatColor;
 import net.md_5.bungee.api.CommandSender;
-import net.md_5.bungee.api.ProxyServer;
 import net.md_5.bungee.api.config.ServerInfo;
 import net.md_5.bungee.api.connection.ProxiedPlayer;
 import net.md_5.bungee.api.plugin.Command;
 
-/**
- * Command to list all players connected to the proxy.
- */
+import java.util.ArrayList;
+import java.util.List;
+
 public class CommandList extends Command
 {
 
@@ -25,8 +21,8 @@ public class CommandList extends Command
     @Override
     public void execute(CommandSender sender, String[] args)
     {
-        sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "command_list_header" ) );
-        for ( ServerInfo server : ProxyServer.getInstance().getServersCopy().values() )
+        sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_list_header" ) );
+        for ( ServerInfo server : BungeeCord.getInstance().getServersCopy().values() )
         {
             if ( !server.canAccess( sender ) )
             {
@@ -40,11 +36,11 @@ public class CommandList extends Command
             }
             players.sort( String.CASE_INSENSITIVE_ORDER );
 
-            sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "command_list_server", server.getName(), server.getPlayers().size(), Util.format( players, ", " ) ) );
+            sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_list_server", server.getName(), server.getPlayers().size(), Util.format( players, ", " ) ) );
         }
 
-        sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "command_list_total", ProxyServer.getInstance().getOnlineCount() ) );
+        sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_list_total", BungeeCord.getInstance().getOnlineCount() ) );
 
-        sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "command_list_footer" ) );
+        sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_list_footer" ) );
     }
 }
diff --git a/module/cmd-send/src/main/java/net/md_5/bungee/module/cmd/send/CommandSend.java b/proxy/src/main/java/io/sapphiremc/amethyst/module/CommandSend.java
similarity index 71%
rename from module/cmd-send/src/main/java/net/md_5/bungee/module/cmd/send/CommandSend.java
rename to proxy/src/main/java/io/sapphiremc/amethyst/module/CommandSend.java
index 1989453c..d5187121 100644
--- a/module/cmd-send/src/main/java/net/md_5/bungee/module/cmd/send/CommandSend.java
+++ b/proxy/src/main/java/io/sapphiremc/amethyst/module/CommandSend.java
@@ -1,4 +1,4 @@
-package net.md_5.bungee.module.cmd.send;
+package io.sapphiremc.amethyst.module;
 
 import com.google.common.base.Joiner;
 import com.google.common.collect.ImmutableSet;
@@ -10,10 +10,11 @@ import java.util.List;
 import java.util.Locale;
 import java.util.Map;
 import java.util.Set;
+
+import net.md_5.bungee.BungeeCord;
 import net.md_5.bungee.api.Callback;
 import net.md_5.bungee.api.ChatColor;
 import net.md_5.bungee.api.CommandSender;
-import net.md_5.bungee.api.ProxyServer;
 import net.md_5.bungee.api.ServerConnectRequest;
 import net.md_5.bungee.api.chat.ComponentBuilder;
 import net.md_5.bungee.api.chat.HoverEvent;
@@ -44,7 +45,7 @@ public class CommandSend extends Command implements TabExecutor
 
         public void lastEntryDone()
         {
-            sender.sendMessage( ProxyServer.getInstance().getTranslationComponent("command_send_result") );
+            sender.sendMessage( BungeeCord.getInstance().getTranslationComponent("command_send_result") );
             for ( Map.Entry<ServerConnectRequest.Result, List<String>> entry : results.entrySet() )
             {
                 ComponentBuilder builder = new ComponentBuilder( "" );
@@ -59,15 +60,11 @@ public class CommandSend extends Command implements TabExecutor
             }
         }
 
-        public static class Entry implements Callback<ServerConnectRequest.Result>
-        {
-
-            private final SendCallback callback;
-            private final ProxiedPlayer player;
-            private final ServerInfo target;
+        public record Entry(SendCallback callback,
+                            ProxiedPlayer player,
+                            ServerInfo target) implements Callback<ServerConnectRequest.Result> {
 
-            public Entry(SendCallback callback, ProxiedPlayer player, ServerInfo target)
-            {
+            public Entry(SendCallback callback, ProxiedPlayer player, ServerInfo target) {
                 this.callback = callback;
                 this.player = player;
                 this.target = target;
@@ -75,16 +72,13 @@ public class CommandSend extends Command implements TabExecutor
             }
 
             @Override
-            public void done(ServerConnectRequest.Result result, Throwable error)
-            {
-                callback.results.get( result ).add( player.getName() );
-                if ( result == ServerConnectRequest.Result.SUCCESS )
-                {
-                    player.sendMessage( ProxyServer.getInstance().getTranslationComponent( "command_send_target", target.getName(), callback.sender.getName() ) );
+            public void done(ServerConnectRequest.Result result, Throwable error) {
+                callback.results.get(result).add(player.getName());
+                if (result == ServerConnectRequest.Result.SUCCESS) {
+                    player.sendMessage(BungeeCord.getInstance().getTranslationComponent("command_send_target", target.getName(), callback.sender.getName()));
                 }
 
-                if ( --callback.count == 0 )
-                {
+                if (--callback.count == 0) {
                     callback.lastEntryDone();
                 }
             }
@@ -101,42 +95,41 @@ public class CommandSend extends Command implements TabExecutor
     {
         if ( args.length != 2 )
         {
-            sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "command_send_usage" ) );
+            sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_send_usage" ) );
             return;
         }
-        ServerInfo server = ProxyServer.getInstance().getServerInfo( args[1] );
+        ServerInfo server = BungeeCord.getInstance().getServerInfo( args[1] );
         if ( server == null )
         {
-            sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "error_no_server" ) );
+            sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "error_no_server" ) );
             return;
         }
 
         List<ProxiedPlayer> targets;
         if ( args[0].equalsIgnoreCase( "all" ) )
         {
-            targets = new ArrayList<>( ProxyServer.getInstance().getPlayers() );
+            targets = new ArrayList<>( BungeeCord.getInstance().getPlayers() );
         } else if ( args[0].equalsIgnoreCase( "current" ) )
         {
-            if ( !( sender instanceof ProxiedPlayer ) )
+            if ( !(sender instanceof ProxiedPlayer player) )
             {
-                sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "error_player_only" ) );
+                sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "error_player_only" ) );
                 return;
             }
-            ProxiedPlayer player = (ProxiedPlayer) sender;
             targets = new ArrayList<>( player.getServer().getInfo().getPlayers() );
         } else
         {
             // If we use a server name, send the entire server. This takes priority over players.
-            ServerInfo serverTarget = ProxyServer.getInstance().getServerInfo( args[0] );
+            ServerInfo serverTarget = BungeeCord.getInstance().getServerInfo( args[0] );
             if ( serverTarget != null )
             {
                 targets = new ArrayList<>( serverTarget.getPlayers() );
             } else
             {
-                ProxiedPlayer player = ProxyServer.getInstance().getPlayer( args[0] );
+                ProxiedPlayer player = BungeeCord.getInstance().getPlayer( args[0] );
                 if ( player == null )
                 {
-                    sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "error_user_not_online" ) );
+                    sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "error_user_not_online" ) );
                     return;
                 }
                 targets = Collections.singletonList( player );
@@ -154,7 +147,7 @@ public class CommandSend extends Command implements TabExecutor
             player.connect( request );
         }
 
-        sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "command_send_attempt", targets.size(), server.getName() ) );
+        sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_send_attempt", targets.size(), server.getName() ) );
     }
 
     @Override
@@ -169,7 +162,7 @@ public class CommandSend extends Command implements TabExecutor
         if ( args.length == 1 )
         {
             String search = args[0].toLowerCase( Locale.ROOT );
-            for ( ProxiedPlayer player : ProxyServer.getInstance().getPlayers() )
+            for ( ProxiedPlayer player : BungeeCord.getInstance().getPlayers() )
             {
                 if ( player.getName().toLowerCase( Locale.ROOT ).startsWith( search ) )
                 {
@@ -187,7 +180,7 @@ public class CommandSend extends Command implements TabExecutor
         } else
         {
             String search = args[1].toLowerCase( Locale.ROOT );
-            for ( String server : ProxyServer.getInstance().getServers().keySet() )
+            for ( String server : BungeeCord.getInstance().getServers().keySet() )
             {
                 if ( server.toLowerCase( Locale.ROOT ).startsWith( search ) )
                 {
diff --git a/module/cmd-server/src/main/java/net/md_5/bungee/module/cmd/server/CommandServer.java b/proxy/src/main/java/io/sapphiremc/amethyst/module/CommandServer.java
similarity index 69%
rename from module/cmd-server/src/main/java/net/md_5/bungee/module/cmd/server/CommandServer.java
rename to proxy/src/main/java/io/sapphiremc/amethyst/module/CommandServer.java
index 00c7ea75..041ff3d2 100644
--- a/module/cmd-server/src/main/java/net/md_5/bungee/module/cmd/server/CommandServer.java
+++ b/proxy/src/main/java/io/sapphiremc/amethyst/module/CommandServer.java
@@ -1,13 +1,9 @@
-package net.md_5.bungee.module.cmd.server;
+package io.sapphiremc.amethyst.module;
 
-import com.google.common.base.Function;
 import com.google.common.base.Predicate;
 import com.google.common.collect.Iterables;
-import java.util.Collections;
-import java.util.Locale;
-import java.util.Map;
+import net.md_5.bungee.BungeeCord;
 import net.md_5.bungee.api.CommandSender;
-import net.md_5.bungee.api.ProxyServer;
 import net.md_5.bungee.api.chat.ClickEvent;
 import net.md_5.bungee.api.chat.ComponentBuilder;
 import net.md_5.bungee.api.chat.HoverEvent;
@@ -18,9 +14,10 @@ import net.md_5.bungee.api.event.ServerConnectEvent;
 import net.md_5.bungee.api.plugin.Command;
 import net.md_5.bungee.api.plugin.TabExecutor;
 
-/**
- * Command to list and switch a player between available servers.
- */
+import java.util.Collections;
+import java.util.Locale;
+import java.util.Map;
+
 public class CommandServer extends Command implements TabExecutor
 {
 
@@ -32,15 +29,15 @@ public class CommandServer extends Command implements TabExecutor
     @Override
     public void execute(CommandSender sender, String[] args)
     {
-        Map<String, ServerInfo> servers = ProxyServer.getInstance().getServers();
+        Map<String, ServerInfo> servers = BungeeCord.getInstance().getServers();
         if ( args.length == 0 )
         {
             if ( sender instanceof ProxiedPlayer )
             {
-                sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "command_server_current", ( (ProxiedPlayer) sender ).getServer().getInfo().getName() ) );
+                sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_server_current", ( (ProxiedPlayer) sender ).getServer().getInfo().getName() ) );
             }
 
-            ComponentBuilder serverList = new ComponentBuilder().appendLegacy( ProxyServer.getInstance().getTranslation( "command_server_list" ) );
+            ComponentBuilder serverList = new ComponentBuilder().appendLegacy( BungeeCord.getInstance().getTranslation( "command_server_list" ) );
             boolean first = true;
             for ( ServerInfo server : servers.values() )
             {
@@ -50,7 +47,7 @@ public class CommandServer extends Command implements TabExecutor
                     int count = server.getPlayers().size();
                     serverTextComponent.setHoverEvent( new HoverEvent(
                             HoverEvent.Action.SHOW_TEXT,
-                            new ComponentBuilder().append( ProxyServer.getInstance().getTranslationComponent( "command_server_text", count ) ).create() )
+                            new ComponentBuilder().append( BungeeCord.getInstance().getTranslationComponent( "command_server_text", count ) ).create() )
                     );
                     serverTextComponent.setClickEvent( new ClickEvent( ClickEvent.Action.RUN_COMMAND, "/server " + server.getName() ) );
                     serverList.append( serverTextComponent );
@@ -69,10 +66,10 @@ public class CommandServer extends Command implements TabExecutor
             ServerInfo server = servers.get( args[0] );
             if ( server == null )
             {
-                player.sendMessage( ProxyServer.getInstance().getTranslationComponent( "error_no_server" ) );
+                player.sendMessage( BungeeCord.getInstance().getTranslationComponent( "error_no_server" ) );
             } else if ( !server.canAccess( player ) )
             {
-                player.sendMessage( ProxyServer.getInstance().getTranslationComponent( "error_no_server_permission" ) );
+                player.sendMessage( BungeeCord.getInstance().getTranslationComponent( "error_no_server_permission" ) );
             } else
             {
                 player.connect( server, ServerConnectEvent.Reason.COMMAND );
@@ -83,7 +80,7 @@ public class CommandServer extends Command implements TabExecutor
     @Override
     public Iterable<String> onTabComplete(final CommandSender sender, final String[] args)
     {
-        return ( args.length > 1 ) ? Collections.EMPTY_LIST : Iterables.transform( Iterables.filter( ProxyServer.getInstance().getServersCopy().values(), new Predicate<ServerInfo>() // Waterfall: use #getServersCopy()
+        return ( args.length > 1 ) ? Collections.EMPTY_LIST : Iterables.transform( Iterables.filter( BungeeCord.getInstance().getServersCopy().values(), new Predicate<>() // Waterfall: use #getServersCopy()
         {
             private final String lower = ( args.length == 0 ) ? "" : args[0].toLowerCase( Locale.ROOT );
 
@@ -92,13 +89,6 @@ public class CommandServer extends Command implements TabExecutor
             {
                 return input.getName().toLowerCase( Locale.ROOT ).startsWith( lower ) && input.canAccess( sender );
             }
-        } ), new Function<ServerInfo, String>()
-        {
-            @Override
-            public String apply(ServerInfo input)
-            {
-                return input.getName();
-            }
-        } );
+        } ), ServerInfo::getName);
     }
 }
diff --git a/module/reconnect-yaml/src/main/java/net/md_5/bungee/module/reconnect/yaml/YamlReconnectHandler.java b/proxy/src/main/java/io/sapphiremc/amethyst/module/YamlReconnectHandler.java
similarity index 97%
rename from module/reconnect-yaml/src/main/java/net/md_5/bungee/module/reconnect/yaml/YamlReconnectHandler.java
rename to proxy/src/main/java/io/sapphiremc/amethyst/module/YamlReconnectHandler.java
index 3a514a76..9a58168b 100644
--- a/module/reconnect-yaml/src/main/java/net/md_5/bungee/module/reconnect/yaml/YamlReconnectHandler.java
+++ b/proxy/src/main/java/io/sapphiremc/amethyst/module/YamlReconnectHandler.java
@@ -1,4 +1,4 @@
-package net.md_5.bungee.module.reconnect.yaml;
+package io.sapphiremc.amethyst.module;
 
 import java.io.File;
 import java.io.FileReader;
@@ -55,7 +55,7 @@ public class YamlReconnectHandler extends AbstractReconnectHandler
     @Override
     protected ServerInfo getStoredServer(ProxiedPlayer player)
     {
-        ServerInfo server = null;
+        ServerInfo server;
         lock.readLock().lock();
         try
         {
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index cddf36a8..14ef5a26 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -11,10 +11,16 @@ import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 
 import dev._2lstudios.flamecord.FlameCord;
-import dev._2lstudios.flamecord.commands.FlameCordCommand;
 import dev._2lstudios.flamecord.configuration.ModulesConfiguration;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import io.sapphiremc.amethyst.command.CommandLobby;
+import io.sapphiremc.amethyst.module.CommandAlert;
+import io.sapphiremc.amethyst.module.CommandAlertRaw;
+import io.sapphiremc.amethyst.module.CommandFind;
+import io.sapphiremc.amethyst.module.CommandList;
+import io.sapphiremc.amethyst.module.CommandSend;
+import io.sapphiremc.amethyst.module.CommandServer;
+import io.sapphiremc.amethyst.module.YamlReconnectHandler;
 import io.github.waterfallmc.waterfall.conf.WaterfallConfiguration;
 import io.github.waterfallmc.waterfall.event.ProxyExceptionEvent;
 import io.github.waterfallmc.waterfall.exception.ProxyPluginEnableDisableException;
@@ -27,12 +33,9 @@ import io.netty.channel.ChannelOption;
 import io.netty.channel.EventLoopGroup;
 import io.netty.util.ResourceLeakDetector;
 import java.io.File;
-import java.io.FileReader;
 import java.io.IOException;
-import java.io.PrintStream;
 import java.net.InetSocketAddress;
 import java.net.SocketAddress;
-import java.text.MessageFormat;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Collections;
@@ -40,9 +43,6 @@ import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Locale;
 import java.util.Map;
-import java.util.MissingResourceException;
-import java.util.PropertyResourceBundle;
-import java.util.ResourceBundle;
 import java.util.Timer;
 import java.util.TimerTask;
 import java.util.UUID;
@@ -80,24 +80,15 @@ import net.md_5.bungee.chat.ScoreComponentSerializer;
 import net.md_5.bungee.chat.SelectorComponentSerializer;
 import net.md_5.bungee.chat.TextComponentSerializer;
 import net.md_5.bungee.chat.TranslatableComponentSerializer;
-import net.md_5.bungee.command.CommandBungee;
 import net.md_5.bungee.command.CommandEnd;
+import net.md_5.bungee.command.CommandBungee;
 import net.md_5.bungee.command.CommandIP;
 import net.md_5.bungee.command.CommandPerms;
 import net.md_5.bungee.command.CommandReload;
 import net.md_5.bungee.command.ConsoleCommandSender;
 import net.md_5.bungee.compress.CompressFactory;
-import net.md_5.bungee.conf.Configuration;
-import net.md_5.bungee.conf.YamlConfig;
+import net.md_5.bungee.conf.*;
 import net.md_5.bungee.forge.ForgeConstants;
-import net.md_5.bungee.module.ModuleManager;
-import net.md_5.bungee.module.cmd.alert.CommandAlert;
-import net.md_5.bungee.module.cmd.alert.CommandAlertRaw;
-import net.md_5.bungee.module.cmd.find.CommandFind;
-import net.md_5.bungee.module.cmd.list.CommandList;
-import net.md_5.bungee.module.cmd.send.CommandSend;
-import net.md_5.bungee.module.cmd.server.CommandServer;
-import net.md_5.bungee.module.reconnect.yaml.YamlReconnectHandler;
 import net.md_5.bungee.netty.PipelineUtils;
 import net.md_5.bungee.protocol.DefinedPacket;
 import net.md_5.bungee.protocol.ProtocolConstants;
@@ -192,7 +183,8 @@ public class BungeeCord extends ProxyServer
     // FlameCord end - 1.7.x support
     @Getter
     private ConnectionThrottle connectionThrottle;
-    private final ModuleManager moduleManager = new ModuleManager();
+    // Amethyst - use own module system
+    // private final ModuleManager moduleManager = new ModuleManager();
 
     {
         // TODO: Proper fallback when we interface the manager
@@ -253,7 +245,7 @@ public class BungeeCord extends ProxyServer
         //getPluginManager().registerCommand( null, new CommandReload() );
         //getPluginManager().registerCommand( null, new CommandEnd() );
         //getPluginManager().registerCommand( null, new CommandIP() );
-        //getPluginManager().registerCommand( null, new CommandBungee() );
+        //getPluginManager().registerCommand( null, new CommandFlame() );
         //getPluginManager().registerCommand( null, new CommandPerms() );
 
         if ( !Boolean.getBoolean( "net.md_5.bungee.native.disable" ) )
@@ -860,34 +852,38 @@ public class BungeeCord extends ProxyServer
         pluginManager.registerCommand( null, new CommandEnd() );
         pluginManager.registerCommand( null, new CommandBungee() );
 
-        if ( modulesConfiguration.reloadEnabled)
+        if ( modulesConfiguration.reloadEnabled )
         {
             pluginManager.registerCommand( null, new CommandReload() );
         }
-        if ( modulesConfiguration.ipEnabled)
+        if ( modulesConfiguration.ipEnabled )
         {
             pluginManager.registerCommand( null, new CommandIP() );
         }
-        if ( modulesConfiguration.permsEnabled)
+        if ( modulesConfiguration.permsEnabled )
         {
             pluginManager.registerCommand( null, new CommandPerms() );
         }
 
         // Modules Commands
-        if ( modulesConfiguration.alertEnabled)
+        if ( modulesConfiguration.alertEnabled )
         {
             pluginManager.registerCommand( null, new CommandAlert() );
             pluginManager.registerCommand( null, new CommandAlertRaw() );
         }
-        if ( modulesConfiguration.findEnabled)
+        if (modulesConfiguration.alertRawEnabled )
+        {
+            pluginManager.registerCommand( null, new CommandAlertRaw() );
+        }
+        if ( modulesConfiguration.findEnabled )
         {
             pluginManager.registerCommand( null, new CommandFind() );
         }
-        if ( modulesConfiguration.listEnabled)
+        if ( modulesConfiguration.listEnabled )
         {
             pluginManager.registerCommand( null, new CommandList() );
         }
-        if ( modulesConfiguration.sendEnabled)
+        if ( modulesConfiguration.sendEnabled )
         {
             pluginManager.registerCommand( null, new CommandSend() );
         }
@@ -914,9 +910,6 @@ public class BungeeCord extends ProxyServer
             pluginManager.registerCommand( null, new CommandLobby() );
         }
         // Amethyst end
-
-        // Flamecord - Commands (Had to make it like this because of maven limitations)
-        pluginManager.registerCommand( null, new FlameCordCommand( this ) );
     }
 
     // Amethyst start - add method to get FlameCord's instance
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java b/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java
index 0436526c..2d28f48b 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java
@@ -1,8 +1,8 @@
 package net.md_5.bungee.command;
 
-import net.md_5.bungee.api.ChatColor;
+import net.md_5.bungee.BungeeCord;
 import net.md_5.bungee.api.CommandSender;
-import net.md_5.bungee.api.ProxyServer;
+import net.md_5.bungee.api.chat.TextComponent;
 import net.md_5.bungee.api.plugin.Command;
 
 public class CommandBungee extends Command
@@ -10,13 +10,31 @@ public class CommandBungee extends Command
 
     public CommandBungee()
     {
-        super( "bungee" );
+        super( "bungee", "bungeecord.command.bungee" );
     }
 
     @Override
-    public void execute(CommandSender sender, String[] args)
-    {
-        // FlameCord - Use custom version message
-        sender.sendMessage( ChatColor.translateAlternateColorCodes( '&', "&eThis server is running &c" + ProxyServer.getInstance().getName() + "&e version &a" + ProxyServer.getInstance().getVersion() + "&e by &bSapphireMC&e." ) );
+    public void execute(final CommandSender sender, final String[] args) {
+
+        if ( args.length > 0 ) {
+            final String arg0 = args[0];
+
+            switch ( arg0 ) {
+                case "firewall" ->
+                        sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_firewall_info",
+                                BungeeCord.getInstance().getFlameCord().getFirewallManager().getFirewalled().size(),
+                                BungeeCord.getInstance().getFlameCord().getFirewallManager().getSeconds() ) );
+                case "about" -> sender.sendMessage(TextComponent.fromLegacyText( String.format( """
+                        §7§m------------§r§7§l(§5Amethyst§7§l)§r§7§m------------
+                        §6Amethyst v%s
+                        §6Contributed by SapphireMC
+                        §6More commands §7- §e/bungee help
+                        §r""", BungeeCord.getInstance().getVersion() ) ) );
+                case "help" -> sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_bungee_help" ) );
+                default -> sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_bungee_usage" ) );
+            }
+        } else {
+            sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_bungee_usage" ) );
+        }
     }
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandIP.java b/proxy/src/main/java/net/md_5/bungee/command/CommandIP.java
index 97c70f5c..b5b05ec0 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandIP.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandIP.java
@@ -1,7 +1,7 @@
 package net.md_5.bungee.command;
 
+import net.md_5.bungee.BungeeCord;
 import net.md_5.bungee.api.CommandSender;
-import net.md_5.bungee.api.ProxyServer;
 import net.md_5.bungee.api.connection.ProxiedPlayer;
 
 public class CommandIP extends PlayerCommand
@@ -17,16 +17,16 @@ public class CommandIP extends PlayerCommand
     {
         if ( args.length < 1 )
         {
-            sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "error_username_needed" ) );
+            sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "error_username_needed" ) );
             return;
         }
-        ProxiedPlayer user = ProxyServer.getInstance().getPlayer( args[0] );
+        ProxiedPlayer user = BungeeCord.getInstance().getPlayer( args[0] );
         if ( user == null )
         {
-            sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "error_user_not_online" ) );
+            sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "error_user_not_online" ) );
         } else
         {
-            sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "command_ip", args[0], user.getSocketAddress() ) );
+            sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_ip", args[0], user.getSocketAddress() ) );
         }
     }
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandPerms.java b/proxy/src/main/java/net/md_5/bungee/command/CommandPerms.java
index 06147382..a0cc3566 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandPerms.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandPerms.java
@@ -2,9 +2,10 @@ package net.md_5.bungee.command;
 
 import java.util.HashSet;
 import java.util.Set;
+
+import net.md_5.bungee.BungeeCord;
 import net.md_5.bungee.Util;
 import net.md_5.bungee.api.CommandSender;
-import net.md_5.bungee.api.ProxyServer;
 import net.md_5.bungee.api.plugin.Command;
 
 public class CommandPerms extends Command
@@ -12,7 +13,7 @@ public class CommandPerms extends Command
 
     public CommandPerms()
     {
-        super( "perms" );
+        super( "perms", "bungeecord.command.perms" );
     }
 
     @Override
@@ -21,13 +22,13 @@ public class CommandPerms extends Command
         Set<String> permissions = new HashSet<>();
         for ( String group : sender.getGroups() )
         {
-            permissions.addAll( ProxyServer.getInstance().getConfigurationAdapter().getPermissions( group ) );
+            permissions.addAll( BungeeCord.getInstance().getConfigurationAdapter().getPermissions( group ) );
         }
-        sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "command_perms_groups", Util.csv( sender.getGroups() ) ) );
+        sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_perms_groups", Util.csv( sender.getGroups() ) ) );
 
         for ( String permission : permissions )
         {
-            sender.sendMessage( ProxyServer.getInstance().getTranslationComponent( "command_perms_permission", permission ) );
+            sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_perms_permission", permission ) );
         }
     }
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandReload.java b/proxy/src/main/java/net/md_5/bungee/command/CommandReload.java
index 2f7a254d..782c39de 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandReload.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandReload.java
@@ -1,11 +1,15 @@
 package net.md_5.bungee.command;
 
+import dev._2lstudios.flamecord.FlameCord;
 import net.md_5.bungee.BungeeCord;
-import net.md_5.bungee.api.ChatColor;
 import net.md_5.bungee.api.CommandSender;
+import net.md_5.bungee.api.config.ServerInfo;
 import net.md_5.bungee.api.event.ProxyReloadEvent;
 import net.md_5.bungee.api.plugin.Command;
 
+import java.util.Collection;
+import java.util.HashSet;
+
 public class CommandReload extends Command
 {
 
@@ -22,8 +26,15 @@ public class CommandReload extends Command
         BungeeCord.getInstance().stopListeners();
         BungeeCord.getInstance().startListeners();
         BungeeCord.getInstance().getPluginManager().callEvent( new ProxyReloadEvent( sender ) );
+        final Collection<String> whitelistedAddresses = new HashSet<>();
+
+        for ( final ServerInfo serverInfo : BungeeCord.getInstance().getServers().values() )
+        {
+            whitelistedAddresses.add( serverInfo.getSocketAddress().toString() );
+        }
+
+        FlameCord.renew( BungeeCord.getInstance().getLogger(), whitelistedAddresses );
 
-        sender.sendMessage( ChatColor.BOLD.toString() + ChatColor.RED.toString() + "Amethyst has been reloaded."
-                + " This is NOT advisable and you will not be supported with any issues that arise! Please restart Amethyst ASAP." );
+        sender.sendMessage( BungeeCord.getInstance().getTranslationComponent( "command_reload" ) );
     }
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java b/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
index 52a9fc71..82393d9c 100644
--- a/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
+++ b/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
@@ -83,7 +83,7 @@ public class YamlConfig implements ConfigurationAdapter
             {
                 try
                 {
-                    config = (Map) yaml.load( is );
+                    config = yaml.load( is );
                 } catch ( YAMLException ex )
                 {
                     throw new RuntimeException( "Invalid configuration encountered - this is a configuration error and NOT a bug! Please attempt to fix the error or see https://www.spigotmc.org/ for help.", ex );
@@ -145,7 +145,7 @@ public class YamlConfig implements ConfigurationAdapter
         } else
         {
             String first = path.substring( 0, index );
-            String second = path.substring( index + 1, path.length() );
+            String second = path.substring( index + 1 );
             Map sub = (Map) submap.get( first );
             if ( sub == null )
             {
@@ -178,7 +178,7 @@ public class YamlConfig implements ConfigurationAdapter
         } else
         {
             String first = path.substring( 0, index );
-            String second = path.substring( index + 1, path.length() );
+            String second = path.substring( index + 1 );
             Map sub = (Map) submap.get( first );
             if ( sub == null )
             {
@@ -315,14 +315,13 @@ public class YamlConfig implements ConfigurationAdapter
     }
 
     @Override
-    @SuppressWarnings("unchecked")
     public Collection<String> getGroups(String player)
     {
         // #1270: Do this to support player names with .
         Map<String, Collection<String>> raw = get( "groups", Collections.emptyMap() );
         Collection<String> groups = raw.get( player );
 
-        Collection<String> ret = ( groups == null ) ? new HashSet<String>() : new HashSet<>( groups );
+        Collection<String> ret = ( groups == null ) ? new HashSet<>() : new HashSet<>( groups );
         ret.add( "default" );
         return ret;
     }
diff --git a/proxy/src/main/java/net/md_5/bungee/module/JenkinsModuleSource.java b/proxy/src/main/java/net/md_5/bungee/module/JenkinsModuleSource.java
deleted file mode 100644
index 338c30d3..00000000
--- a/proxy/src/main/java/net/md_5/bungee/module/JenkinsModuleSource.java
+++ /dev/null
@@ -1,42 +0,0 @@
-package net.md_5.bungee.module;
-
-import java.io.IOException;
-import java.net.URL;
-import java.net.URLConnection;
-import java.nio.file.Files;
-import java.nio.file.StandardCopyOption;
-import lombok.Data;
-import net.md_5.bungee.Util;
-
-@Data
-public class JenkinsModuleSource implements ModuleSource
-{
-
-    @Override
-    public void retrieve(ModuleSpec module, ModuleVersion version)
-    {
-        System.out.println( "Attempting to Jenkins download module " + module.getName() + " v" + version.getBuild() );
-        try
-        {
-            final String url = String.format(
-                "https://papermc.io/api/v2/projects/%1$s/versions/%2$s/builds/%3$s/downloads/%4$s-%2$s-%3$s.jar",
-                "waterfall",
-                net.md_5.bungee.api.ProxyServer.getInstance().getVersion().split(":")[2].split("-")[0],
-                version.getBuild(),
-                module.getName()
-            );
-            URL website = new URL( url );
-            URLConnection con = website.openConnection();
-            // 15 second timeout at various stages
-            con.setConnectTimeout( 15000 );
-            con.setReadTimeout( 15000 );
-            con.setRequestProperty( "User-Agent", "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.106 Safari/537.36" );
-
-            Files.copy( con.getInputStream(), module.getFile().toPath(), StandardCopyOption.REPLACE_EXISTING );
-            System.out.println( "Download complete" );
-        } catch ( IOException ex )
-        {
-            System.out.println( "Failed to download: " + Util.exception( ex ) );
-        }
-    }
-}
diff --git a/proxy/src/main/java/net/md_5/bungee/module/ModuleManager.java b/proxy/src/main/java/net/md_5/bungee/module/ModuleManager.java
deleted file mode 100644
index d3abee44..00000000
--- a/proxy/src/main/java/net/md_5/bungee/module/ModuleManager.java
+++ /dev/null
@@ -1,155 +0,0 @@
-package net.md_5.bungee.module;
-
-import com.google.common.base.Preconditions;
-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileWriter;
-import java.io.InputStream;
-import java.net.URI;
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.jar.JarEntry;
-import java.util.jar.JarFile;
-import java.util.logging.Level;
-import net.md_5.bungee.api.ProxyServer;
-import net.md_5.bungee.api.plugin.PluginDescription;
-import net.md_5.bungee.util.CaseInsensitiveMap;
-import org.yaml.snakeyaml.DumperOptions;
-import org.yaml.snakeyaml.Yaml;
-
-public class ModuleManager
-{
-
-    private final Map<String, ModuleSource> knownSources = new HashMap<>();
-
-    public ModuleManager()
-    {
-        knownSources.put( "jenkins", new JenkinsModuleSource() );
-    }
-
-    // CHECKSTYLE:OFF
-    @SuppressFBWarnings(
-            {
-                "SF_SWITCH_FALLTHROUGH", "SF_SWITCH_NO_DEFAULT"
-            })
-    // CHECKSTYLE:ON
-    public void load(ProxyServer proxy, File moduleDirectory) throws Exception
-    {
-        moduleDirectory.mkdir();
-
-        ModuleVersion bungeeVersion = ModuleVersion.parse( proxy.getVersion() );
-        if ( bungeeVersion == null )
-        {
-            proxy.getLogger().warning( "Couldn't detect bungee version. Custom build?" ); // Waterfall - Use logger
-            return;
-        }
-
-        List<ModuleSpec> modules = new ArrayList<>();
-        File configFile = new File( "modules.yml" );
-        // Start Yaml
-        DumperOptions options = new DumperOptions();
-        options.setDefaultFlowStyle( DumperOptions.FlowStyle.BLOCK );
-        Yaml yaml = new Yaml( options );
-
-        Map<String, Object> config;
-
-        configFile.createNewFile();
-        try ( InputStream is = new FileInputStream( configFile ) )
-        {
-            config = (Map) yaml.load( is );
-        }
-
-        if ( config == null )
-        {
-            config = new CaseInsensitiveMap<>();
-        } else
-        {
-            config = new CaseInsensitiveMap<>( config );
-        }
-        // End yaml
-
-        List<String> defaults = new ArrayList<>();
-        Object readModules = config.get( "modules" );
-        if ( readModules != null )
-        {
-            defaults.addAll( (Collection) readModules );
-        }
-        int version = ( config.containsKey( "version" ) ) ? (int) config.get( "version" ) : 0;
-        switch ( version )
-        {
-            case 0:
-                defaults.add( "jenkins://cmd_alert" );
-                defaults.add( "jenkins://cmd_find" );
-                defaults.add( "jenkins://cmd_list" );
-                defaults.add( "jenkins://cmd_send" );
-                defaults.add( "jenkins://cmd_server" );
-            case 1:
-                defaults.add( "jenkins://reconnect_yaml" );
-        }
-        config.put( "modules", defaults );
-        config.put( "version", 2 );
-
-        try ( FileWriter wr = new FileWriter( configFile ) )
-        {
-            yaml.dump( config, wr );
-        }
-
-        for ( String s : (List<String>) config.get( "modules" ) )
-        {
-            URI uri = new URI( s );
-
-            ModuleSource source = knownSources.get( uri.getScheme() );
-            if ( source == null )
-            {
-                System.out.println( "Unknown module source: " + s );
-                continue;
-            }
-            String name = uri.getAuthority();
-            if ( name == null )
-            {
-                System.out.println( "Unknown module host: " + s );
-                continue;
-            }
-
-            ModuleSpec spec = new ModuleSpec( name, new File( moduleDirectory, name + ".jar" ), source );
-            modules.add( spec );
-            System.out.println( "Discovered module: " + spec );
-        }
-
-        for ( ModuleSpec module : modules )
-        {
-            ModuleVersion moduleVersion = ( module.getFile().exists() ) ? getVersion( module.getFile() ) : null;
-
-            if ( !bungeeVersion.equals( moduleVersion ) )
-            {
-                System.out.println( "Attempting to update plugin from " + moduleVersion + " to " + bungeeVersion );
-                module.getProvider().retrieve( module, bungeeVersion );
-            }
-        }
-    }
-
-    @SuppressFBWarnings("REC_CATCH_EXCEPTION")
-    private ModuleVersion getVersion(File file)
-    {
-        try ( JarFile jar = new JarFile( file ) )
-        {
-            JarEntry pdf = jar.getJarEntry( "plugin.yml" );
-            Preconditions.checkNotNull( pdf, "Plugin must have a plugin.yml" );
-
-            try ( InputStream in = jar.getInputStream( pdf ) )
-            {
-                PluginDescription desc = new Yaml().loadAs( in, PluginDescription.class );
-                return ModuleVersion.parse( desc.getVersion() );
-            }
-        } catch ( Exception ex )
-        {
-            ProxyServer.getInstance().getLogger().log( Level.WARNING, "Could not check module from file " + file, ex );
-        }
-
-        return null;
-    }
-}
diff --git a/proxy/src/main/java/net/md_5/bungee/module/ModuleSource.java b/proxy/src/main/java/net/md_5/bungee/module/ModuleSource.java
deleted file mode 100644
index 09f5624c..00000000
--- a/proxy/src/main/java/net/md_5/bungee/module/ModuleSource.java
+++ /dev/null
@@ -1,7 +0,0 @@
-package net.md_5.bungee.module;
-
-interface ModuleSource
-{
-
-    void retrieve(ModuleSpec module, ModuleVersion version);
-}
diff --git a/proxy/src/main/java/net/md_5/bungee/module/ModuleSpec.java b/proxy/src/main/java/net/md_5/bungee/module/ModuleSpec.java
deleted file mode 100644
index ebf6cf67..00000000
--- a/proxy/src/main/java/net/md_5/bungee/module/ModuleSpec.java
+++ /dev/null
@@ -1,13 +0,0 @@
-package net.md_5.bungee.module;
-
-import java.io.File;
-import lombok.Data;
-
-@Data
-public class ModuleSpec
-{
-
-    private final String name;
-    private final File file;
-    private final ModuleSource provider;
-}
diff --git a/proxy/src/main/java/net/md_5/bungee/module/ModuleVersion.java b/proxy/src/main/java/net/md_5/bungee/module/ModuleVersion.java
deleted file mode 100644
index d52b8106..00000000
--- a/proxy/src/main/java/net/md_5/bungee/module/ModuleVersion.java
+++ /dev/null
@@ -1,35 +0,0 @@
-package net.md_5.bungee.module;
-
-import lombok.AccessLevel;
-import lombok.Data;
-import lombok.RequiredArgsConstructor;
-
-@Data
-@RequiredArgsConstructor(access = AccessLevel.PRIVATE)
-public class ModuleVersion
-{
-
-    private final String build;
-    private final String git;
-
-    public static ModuleVersion parse(String version)
-    {
-        int lastColon = version.lastIndexOf( ':' );
-        int secondLastColon = version.lastIndexOf( ':', lastColon - 1 );
-
-        if ( lastColon == -1 || secondLastColon == -1 )
-        {
-            return null;
-        }
-
-        String buildNumber = version.substring( lastColon + 1, version.length() );
-        String gitCommit = version.substring( secondLastColon + 1, lastColon ).replaceAll( "\"", "" );
-
-        if ( "unknown".equals( buildNumber ) || "unknown".equals( gitCommit ) )
-        {
-            return null;
-        }
-
-        return new ModuleVersion( buildNumber, gitCommit );
-    }
-}
-- 
2.29.2.windows.3

