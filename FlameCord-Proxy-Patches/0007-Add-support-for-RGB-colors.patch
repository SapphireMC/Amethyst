From 4e94647b113d1b5b8adfc14574472d79e39d4120 Mon Sep 17 00:00:00 2001
From: Denary Planet <denaryplanet@gmail.com>
Date: Sun, 1 Aug 2021 02:33:03 +0500
Subject: [PATCH] Add support for RGB colors


diff --git a/chat/src/main/java/net/md_5/bungee/api/ChatColor.java b/chat/src/main/java/net/md_5/bungee/api/ChatColor.java
index e47589d4..bb2592ff 100644
--- a/chat/src/main/java/net/md_5/bungee/api/ChatColor.java
+++ b/chat/src/main/java/net/md_5/bungee/api/ChatColor.java
@@ -3,6 +3,7 @@ package net.md_5.bungee.api;
 import com.google.common.base.Preconditions;
 import java.awt.Color;
 import java.util.*;
+import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 import java.util.stream.Collectors;
 
@@ -20,18 +21,22 @@ public final class ChatColor
      */
     public static final char COLOR_CHAR = '\u00A7';
     public static final String ALL_CODES = "0123456789AaBbCcDdEeFfKkLlMmNnOoRrXx";
+    /**
+     * Pattern to hex colors
+     */
+    public static final Pattern HEX_PATTERN = Pattern.compile( "#[a-fA-F0-9]{6}" );
     /**
      * Pattern to remove all colour codes.
      */
-    public static final Pattern STRIP_COLOR_PATTERN = Pattern.compile( "(?i)" + String.valueOf( COLOR_CHAR ) + "[0-9A-FK-ORX]" );
+    public static final Pattern STRIP_COLOR_PATTERN = Pattern.compile( "(?i)" + COLOR_CHAR + "[0-9A-FK-ORX]" );
     /**
      * Colour instances keyed by their active character.
      */
-    private static final Map<Character, ChatColor> BY_CHAR = new HashMap<Character, ChatColor>();
+    private static final Map<Character, ChatColor> BY_CHAR = new HashMap<>();
     /**
      * Colour instances keyed by their name.
      */
-    private static final Map<String, ChatColor> BY_NAME = new HashMap<String, ChatColor>();
+    private static final Map<String, ChatColor> BY_NAME = new HashMap<>();
     /**
      * Represents black.
      */
@@ -217,6 +222,7 @@ public final class ChatColor
 
     public static String translateAlternateColorCodes(char altColorChar, String textToTranslate)
     {
+        textToTranslate = translateRGBColors(textToTranslate);
         char[] b = textToTranslate.toCharArray();
         for ( int i = 0; i < b.length - 1; i++ )
         {
@@ -236,6 +242,16 @@ public final class ChatColor
         return listToTranslate.stream().map(ChatColor::translateAlternateColorCodes).collect(Collectors.toList());
     }
 
+    public static String translateRGBColors(String textToTranslate) {
+        Matcher match = HEX_PATTERN.matcher(textToTranslate);
+        while (match.find()) {
+            String color = textToTranslate.substring(match.start(), match.end());
+            textToTranslate = textToTranslate.replace(color, of(color) + "");
+            match = HEX_PATTERN.matcher(textToTranslate);
+        }
+        return textToTranslate;
+    }
+
     /**
      * Get the colour represented by the specified code.
      *
-- 
2.33.0.windows.2

