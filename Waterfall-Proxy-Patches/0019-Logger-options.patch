From 9b7e70cc00eee461eae5d3fa4dc9311d46028e3a Mon Sep 17 00:00:00 2001
From: DenaryDev <denaryplanet@gmail.com>
Date: Mon, 10 Jan 2022 00:39:35 +0500
Subject: [PATCH] Logger options


diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyServer.java b/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
index 7c464176..c79ce72a 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyServer.java
@@ -2,6 +2,7 @@ package net.md_5.bungee.api;
 
 import com.google.common.base.Preconditions;
 import io.sapphiremc.amethyst.Amethyst;
+import io.sapphiremc.amethyst.firewall.FirewallManager;
 import java.io.File;
 import java.net.InetSocketAddress;
 import java.net.SocketAddress;
diff --git a/flame/src/main/java/io/sapphiremc/amethyst/conf/AmethystConfig.java b/flame/src/main/java/io/sapphiremc/amethyst/conf/AmethystConfig.java
index e567be66..d7de9d03 100644
--- a/flame/src/main/java/io/sapphiremc/amethyst/conf/AmethystConfig.java
+++ b/flame/src/main/java/io/sapphiremc/amethyst/conf/AmethystConfig.java
@@ -51,6 +51,19 @@ public class AmethystConfig extends AbstractYamlConfig {
      */
     public String maxVersion = "1.18.2";
 
+    /**
+     * Enable or disable InitialHandler logging.
+     */
+    public boolean logInitialHandler = false;
+    /**
+     * Enable or disable Exceptions logging.
+     */
+    public boolean logExceptions = false;
+    /**
+     * Enable or disable HaProxy logging.
+     */
+    public boolean logHaProxy = false;
+
     public AmethystConfig(ConfigurationProvider provider) {
         super(provider, "amethyst.yml");
         init();
@@ -60,6 +73,10 @@ public class AmethystConfig extends AbstractYamlConfig {
     @Override
     protected void loadContent()
     {
+        logInitialHandler = getBoolean("logger.initialHandler", logInitialHandler);
+        logExceptions = getBoolean("logger.exceptions", logExceptions);
+        logHaProxy = getBoolean("logger.haProxy", logHaProxy);
+
         alertEnabled = getBoolean( "modules.alert", alertEnabled );
         findEnabled = getBoolean( "modules.find", findEnabled );
         ipEnabled = getBoolean( "modules.ip", ipEnabled );
diff --git a/flame/src/main/resources/amethyst.yml b/flame/src/main/resources/amethyst.yml
index 8b2bffc3..b5d1f34c 100644
--- a/flame/src/main/resources/amethyst.yml
+++ b/flame/src/main/resources/amethyst.yml
@@ -16,6 +16,17 @@ versions:
   # Default: 1.18.2
   max: "1.18.2"
 
+# Logger configuration
+logger:
+  # Enable or disable InitialHandler logging.
+  initialHandler: false
+
+  # Enable or disable Exceptions logging.
+  exceptions: false
+
+  # Enable or disable HaProxy logging.
+  haProxy: false
+
 # Modules configuration
 # In this section you can enable or disable certain proxy modules
 modules:
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index 7b7e42b5..28d0c795 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -293,7 +293,7 @@ public class BungeeCord extends ProxyServer
         pluginManager.loadPlugins();
         config.load();
 
-        Amethyst.getInstance().load(logger); // Amethyst - load our configs
+        Amethyst.getInstance().load( logger); // Amethyst - load our configs
         AmethystModulesManager.registerModules(this); // Amethyst - register modules
         ProtocolVersion.register(); // Amethyst - configurable min and max versions
 
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandReload.java b/proxy/src/main/java/net/md_5/bungee/command/CommandReload.java
index 1c696a7d..926dd30a 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandReload.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandReload.java
@@ -3,8 +3,11 @@ package net.md_5.bungee.command;
 import io.sapphiremc.amethyst.Amethyst;
 import io.sapphiremc.amethyst.AmethystModulesManager;
 import io.sapphiremc.amethyst.api.protocol.ProtocolVersion;
+import java.util.Collection;
+import java.util.HashSet;
 import net.md_5.bungee.BungeeCord;
 import net.md_5.bungee.api.CommandSender;
+import net.md_5.bungee.api.config.ServerInfo;
 import net.md_5.bungee.api.connection.PendingConnection;
 import net.md_5.bungee.api.connection.ProxiedPlayer;
 import net.md_5.bungee.api.event.ProxyReloadEvent;
@@ -28,7 +31,7 @@ public class CommandReload extends Command
         proxy.startListeners();
         proxy.getPluginManager().callEvent( new ProxyReloadEvent( sender ) );
 
-        Amethyst.getInstance().load( BungeeCord.getInstance().getLogger() ); // Amethyst - load our configs
+        Amethyst.getInstance().load( BungeeCord.getInstance().getLogger()); // Amethyst - load our configs
         AmethystModulesManager.registerModules( BungeeCord.getInstance() ); // Amethyst - register modules
         ProtocolVersion.register(); // Amethyst - register min and max supported versions
 
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
index 2c46ba9b..99dd905d 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
@@ -344,7 +344,7 @@ public class InitialHandler extends PacketHandler implements PendingConnection
         {
             case 1:
                 // Ping
-                if ( bungee.getConfig().isLogPings() )
+                if ( bungee.getConfig().isLogPings() && bungee.getAmethyst().getConfig().logInitialHandler ) // Amethyst - Option to fully disable InitialHandler logging.
                 {
                     bungee.getLogger().log( Level.INFO, "{0} has pinged", this );
                 }
@@ -353,7 +353,7 @@ public class InitialHandler extends PacketHandler implements PendingConnection
                 break;
             case 2:
                 // Login
-                if (BungeeCord.getInstance().getConfig().isLogInitialHandlerConnections() ) // Waterfall
+                if (BungeeCord.getInstance().getConfig().isLogInitialHandlerConnections() && bungee.getAmethyst().getConfig().logInitialHandler) // Waterfall  // Amethyst - Option to fully disable InitialHandler logging.
                 {
                     bungee.getLogger().log( Level.INFO, "{0} has connected", this );
                 }
@@ -387,6 +387,7 @@ public class InitialHandler extends PacketHandler implements PendingConnection
             disconnect( bungee.getTranslationComponent( "error.name-invalid" ) );
             return;
         }
+
         this.loginRequest = loginRequest;
 
         int limit = BungeeCord.getInstance().config.getPlayerLimit();
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java b/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java
index 6d38de16..58a508d4 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java
@@ -44,7 +44,7 @@ public class HandlerBoss extends ChannelInboundHandlerAdapter
             channel = new ChannelWrapper( ctx );
             handler.connected( channel );
 
-            if ( !( handler instanceof InitialHandler || handler instanceof PingHandler ) )
+            if ( !( handler instanceof InitialHandler || handler instanceof PingHandler ) && ProxyServer.getInstance().getAmethyst().getConfig().logInitialHandler ) // Amethyst - Option to fully disable InitialHandler logging.
             {
                 ProxyServer.getInstance().getLogger().log( Level.INFO, "{0} has connected", handler );
             }
@@ -59,7 +59,7 @@ public class HandlerBoss extends ChannelInboundHandlerAdapter
             channel.markClosed();
             handler.disconnected( channel );
 
-            if ( !( handler instanceof InitialHandler || handler instanceof PingHandler ) )
+            if ( !( handler instanceof InitialHandler || handler instanceof PingHandler ) && ProxyServer.getInstance().getAmethyst().getConfig().logInitialHandler ) // Amethyst - Option to fully disable InitialHandler logging.
             {
                 ProxyServer.getInstance().getLogger().log( Level.INFO, "{0} has disconnected", handler );
             }
@@ -98,10 +98,13 @@ public class HandlerBoss extends ChannelInboundHandlerAdapter
                 {
                     InetSocketAddress newAddress = new InetSocketAddress( proxy.sourceAddress(), proxy.sourcePort() );
 
-                    ProxyServer.getInstance().getLogger().log( Level.FINE, "Set remote address via PROXY {0} -> {1}", new Object[]
+                    if ( ProxyServer.getInstance().getAmethyst().getConfig().logHaProxy ) // Amethyst - Option to fully disable InitialHandler logging.
                     {
-                        channel.getRemoteAddress(), newAddress
-                    } );
+                        ProxyServer.getInstance().getLogger().log( Level.FINE, "Set remote address via PROXY {0} -> {1}", new Object[]
+                        {
+                            channel.getRemoteAddress(), newAddress
+                        } );
+                    }
 
                     channel.setRemoteAddress( newAddress );
                 }
@@ -144,7 +147,7 @@ public class HandlerBoss extends ChannelInboundHandlerAdapter
     {
         if ( ctx.channel().isActive() )
         {
-            boolean logExceptions = !( handler instanceof PingHandler );
+            boolean logExceptions = ProxyServer.getInstance().getAmethyst().getConfig().logExceptions && !(handler instanceof PingHandler); // Amethyst - Option to fully disable exceptions logging.
 
             if ( logExceptions )
             {
-- 
2.35.1

