From aa9c8dbc26168d008d419ee5d714512b79b0f5fb Mon Sep 17 00:00:00 2001
From: DenaryDev <denaryplanet@gmail.com>
Date: Mon, 10 Jan 2022 00:39:35 +0500
Subject: [PATCH] Logger options


diff --git a/flame/src/main/java/io/sapphiremc/amethyst/conf/AmethystConfig.java b/flame/src/main/java/io/sapphiremc/amethyst/conf/AmethystConfig.java
index 80ec623a..e5a30227 100644
--- a/flame/src/main/java/io/sapphiremc/amethyst/conf/AmethystConfig.java
+++ b/flame/src/main/java/io/sapphiremc/amethyst/conf/AmethystConfig.java
@@ -7,6 +7,19 @@ import net.md_5.bungee.config.ConfigurationProvider;
  * Use this only to get parameter values!
  */
 public class AmethystConfig extends AbstractYamlConfig {
+    /**
+     * Enable or disable InitialHandler logging.
+     */
+    public boolean logInitialHandler = false;
+    /**
+     * Enable or disable Exceptions logging.
+     */
+    public boolean logExceptions = false;
+    /**
+     * Enable or disable HaProxy logging.
+     */
+    public boolean logHaProxy = false;
+
     /**
      * A module that provides the /alert and /alertraw commands.
      */
@@ -53,6 +66,10 @@ public class AmethystConfig extends AbstractYamlConfig {
     @Override
     protected void loadContent()
     {
+        logInitialHandler = getBoolean("logger.initialHandler", logInitialHandler);
+        logExceptions = getBoolean("logger.exceptions", logExceptions);
+        logHaProxy = getBoolean("logger.haProxy", logHaProxy);
+
         alertEnabled = getBoolean( "modules.alert", alertEnabled );
         findEnabled = getBoolean( "modules.find", findEnabled );
         ipEnabled = getBoolean( "modules.ip", ipEnabled );
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
index 2063fa98..2bba722a 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
@@ -366,7 +366,7 @@ public class InitialHandler extends PacketHandler implements PendingConnection
         {
             case 1:
                 // Ping
-                if ( bungee.getConfig().isLogPings() )
+                if ( bungee.getConfig().isLogPings() && bungee.getAmethyst().getConfig().logInitialHandler ) // Amethyst - Option to fully disable InitialHandler logging.
                 {
                     bungee.getLogger().log( Level.INFO, "{0} has pinged", this );
                 }
@@ -375,7 +375,7 @@ public class InitialHandler extends PacketHandler implements PendingConnection
                 break;
             case 2:
                 // Login
-                if (BungeeCord.getInstance().getConfig().isLogInitialHandlerConnections() ) // Waterfall
+                if ( BungeeCord.getInstance().getConfig().isLogInitialHandlerConnections() && bungee.getAmethyst().getConfig().logInitialHandler ) // Waterfall  // Amethyst - Option to fully disable InitialHandler logging.
                 {
                     bungee.getLogger().log( Level.INFO, "{0} has connected", this );
                 }
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java b/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java
index c891f705..6550d1d7 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java
@@ -44,7 +44,7 @@ public class HandlerBoss extends ChannelInboundHandlerAdapter
             channel = new ChannelWrapper( ctx );
             handler.connected( channel );
 
-            if ( !( handler instanceof InitialHandler || handler instanceof PingHandler ) )
+            if ( !( handler instanceof InitialHandler || handler instanceof PingHandler ) && ProxyServer.getInstance().getAmethyst().getConfig().logInitialHandler ) // Amethyst - Option to fully disable InitialHandler logging.
             {
                 ProxyServer.getInstance().getLogger().log( Level.INFO, "{0} has connected", handler );
             }
@@ -59,7 +59,7 @@ public class HandlerBoss extends ChannelInboundHandlerAdapter
             channel.markClosed();
             handler.disconnected( channel );
 
-            if ( !( handler instanceof InitialHandler || handler instanceof PingHandler ) )
+            if ( !( handler instanceof InitialHandler || handler instanceof PingHandler ) && ProxyServer.getInstance().getAmethyst().getConfig().logInitialHandler ) // Amethyst - Option to fully disable InitialHandler logging.
             {
                 ProxyServer.getInstance().getLogger().log( Level.INFO, "{0} has disconnected", handler );
             }
@@ -98,10 +98,13 @@ public class HandlerBoss extends ChannelInboundHandlerAdapter
                 {
                     InetSocketAddress newAddress = new InetSocketAddress( proxy.sourceAddress(), proxy.sourcePort() );
 
-                    ProxyServer.getInstance().getLogger().log( Level.FINE, "Set remote address via PROXY {0} -> {1}", new Object[]
+                    if ( ProxyServer.getInstance().getAmethyst().getConfig().logHaProxy ) // Amethyst - Option to fully disable InitialHandler logging.
                     {
-                        channel.getRemoteAddress(), newAddress
-                    } );
+                        ProxyServer.getInstance().getLogger().log( Level.FINE, "Set remote address via PROXY {0} -> {1}", new Object[]
+                        {
+                            channel.getRemoteAddress(), newAddress
+                        } );
+                    }
 
                     channel.setRemoteAddress( newAddress );
                 }
@@ -144,7 +147,7 @@ public class HandlerBoss extends ChannelInboundHandlerAdapter
     {
         if ( ctx.channel().isActive() )
         {
-            boolean logExceptions = !( handler instanceof PingHandler );
+            boolean logExceptions = !( handler instanceof PingHandler ) && ProxyServer.getInstance().getAmethyst().getConfig().logExceptions; // Amethyst - Option to fully disable exceptions logging.
 
             if ( logExceptions )
             {
-- 
2.37.1.windows.1

