From e8f38d3066c76322ad7af50079cf0f6c672df238 Mon Sep 17 00:00:00 2001
From: DenaryDev <denaryplanet@gmail.com>
Date: Tue, 26 Apr 2022 13:52:59 +0500
Subject: [PATCH] Drop 1.8-1.11.2 support


diff --git a/flame/src/main/java/io/sapphiremc/amethyst/conf/AmethystConfig.java b/flame/src/main/java/io/sapphiremc/amethyst/conf/AmethystConfig.java
index 35920436..1a5f30fe 100644
--- a/flame/src/main/java/io/sapphiremc/amethyst/conf/AmethystConfig.java
+++ b/flame/src/main/java/io/sapphiremc/amethyst/conf/AmethystConfig.java
@@ -56,9 +56,9 @@ public class AmethystConfig extends AbstractYamlConfig {
 
     /**
      * Minimum supported version.
-     * Default: 1.8
+     * Default: 1.12
      */
-    public String minVersion = "1.8";
+    public String minVersion = "1.12";
     /**
      * Maximum supported version.
      * Default: 1.18.2
diff --git a/protocol/src/main/java/io/sapphiremc/amethyst/api/protocol/ProtocolVersion.java b/protocol/src/main/java/io/sapphiremc/amethyst/api/protocol/ProtocolVersion.java
index ab87a53f..169bf0ef 100644
--- a/protocol/src/main/java/io/sapphiremc/amethyst/api/protocol/ProtocolVersion.java
+++ b/protocol/src/main/java/io/sapphiremc/amethyst/api/protocol/ProtocolVersion.java
@@ -16,15 +16,6 @@ import java.util.Set;
 public enum ProtocolVersion {
     UNKNOWN(-1, "Unknown"),
     LEGACY(-2, "Legacy"),
-    MINECRAFT_1_8(47,
-            "1.8", "1.8.1", "1.8.2", "1.8.3", "1.8.4", "1.8.5", "1.8.6", "1.8.7", "1.8.8", "1.8.9"),
-    MINECRAFT_1_9(107, "1.9"),
-    MINECRAFT_1_9_1(108, "1.9.1"),
-    MINECRAFT_1_9_2(109, "1.9.2"),
-    MINECRAFT_1_9_4(110, "1.9.3", "1.9.4"),
-    MINECRAFT_1_10(210, "1.10", "1.10.1", "1.10.2"),
-    MINECRAFT_1_11(315, "1.11"),
-    MINECRAFT_1_11_1(316, "1.11.1", "1.11.2"),
     MINECRAFT_1_12(335, "1.12"),
     MINECRAFT_1_12_1(338, "1.12.1"),
     MINECRAFT_1_12_2(340, "1.12.2"),
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java b/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
index 324f8b77..6c9f9e64 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
@@ -59,7 +59,7 @@ public enum Protocol
             TO_SERVER.registerPacket(
                     Handshake.class,
                     Handshake::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x00 )
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x00 )
             );
         }
     },
@@ -71,8 +71,7 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     KeepAlive.class,
                     KeepAlive::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x00 ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x1F ),
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x1F ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x21 ),
                     map( ProtocolVersion.MINECRAFT_1_14, 0x20 ),
                     map( ProtocolVersion.MINECRAFT_1_15, 0x21 ),
@@ -83,8 +82,7 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     Login.class,
                     Login::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x01 ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x23 ),
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x23 ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x25 ),
                     map( ProtocolVersion.MINECRAFT_1_15, 0x26 ),
                     map( ProtocolVersion.MINECRAFT_1_16, 0x25 ),
@@ -94,8 +92,7 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     Chat.class,
                     Chat::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x02 ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x0F ),
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x0F ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x0E ),
                     map( ProtocolVersion.MINECRAFT_1_15, 0x0F ),
                     map( ProtocolVersion.MINECRAFT_1_16, 0x0E ),
@@ -104,8 +101,6 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     Respawn.class,
                     Respawn::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x07 ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x33 ),
                     map( ProtocolVersion.MINECRAFT_1_12, 0x34 ),
                     map( ProtocolVersion.MINECRAFT_1_12_1, 0x35 ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x38 ),
@@ -118,7 +113,7 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     BossBar.class,
                     BossBar::new,
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x0C ),
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x0C ),
                     map( ProtocolVersion.MINECRAFT_1_15, 0x0D ),
                     map( ProtocolVersion.MINECRAFT_1_16, 0x0C ),
                     map( ProtocolVersion.MINECRAFT_1_17, 0x0D )
@@ -126,8 +121,7 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     PlayerListItem.class, // PlayerInfo
                     PlayerListItem::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x38 ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x2D ),
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x2D ),
                     map( ProtocolVersion.MINECRAFT_1_12_1, 0x2E ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x30 ),
                     map( ProtocolVersion.MINECRAFT_1_14, 0x33 ),
@@ -139,8 +133,7 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     TabCompleteResponse.class,
                     TabCompleteResponse::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x3A ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x0E ),
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x0E ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x10 ),
                     map( ProtocolVersion.MINECRAFT_1_15, 0x11 ),
                     map( ProtocolVersion.MINECRAFT_1_16, 0x10 ),
@@ -150,8 +143,6 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     ScoreboardObjective.class,
                     ScoreboardObjective::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x3B ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x3F ),
                     map( ProtocolVersion.MINECRAFT_1_12, 0x41 ),
                     map( ProtocolVersion.MINECRAFT_1_12_1, 0x42 ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x45 ),
@@ -162,8 +153,6 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     ScoreboardScore.class,
                     ScoreboardScore::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x3C ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x42 ),
                     map( ProtocolVersion.MINECRAFT_1_12, 0x44 ),
                     map( ProtocolVersion.MINECRAFT_1_12_1, 0x45 ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x48 ),
@@ -174,8 +163,6 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     ScoreboardDisplay.class,
                     ScoreboardDisplay::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x3D ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x38 ),
                     map( ProtocolVersion.MINECRAFT_1_12, 0x3A ),
                     map( ProtocolVersion.MINECRAFT_1_12_1, 0x3B ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x3E ),
@@ -186,8 +173,6 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     Team.class,
                     Team::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x3E ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x41 ),
                     map( ProtocolVersion.MINECRAFT_1_12, 0x43 ),
                     map( ProtocolVersion.MINECRAFT_1_12_1, 0x44 ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x47 ),
@@ -198,8 +183,7 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     PluginMessage.class,
                     PluginMessage::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x3F ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x18 ),
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x18 ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x19 ),
                     map( ProtocolVersion.MINECRAFT_1_14, 0x18 ),
                     map( ProtocolVersion.MINECRAFT_1_15, 0x19 ),
@@ -210,8 +194,7 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     Kick.class,
                     Kick::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x40 ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x1A ),
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x1A ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x1B ),
                     map( ProtocolVersion.MINECRAFT_1_14, 0x1A ),
                     map( ProtocolVersion.MINECRAFT_1_15, 0x1B ),
@@ -222,7 +205,6 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     Title.class,
                     Title::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x45 ),
                     map( ProtocolVersion.MINECRAFT_1_12, 0x47 ),
                     map( ProtocolVersion.MINECRAFT_1_12_1, 0x48 ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x4B ),
@@ -252,9 +234,6 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     PlayerListHeaderFooter.class,
                     PlayerListHeaderFooter::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x47 ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x48 ),
-                    map( ProtocolVersion.MINECRAFT_1_9_4, 0x47 ),
                     map( ProtocolVersion.MINECRAFT_1_12, 0x49 ),
                     map( ProtocolVersion.MINECRAFT_1_12_1, 0x4A ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x4E ),
@@ -267,8 +246,7 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     EntityStatus.class,
                     EntityStatus::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x1A ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x1B ),
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x1B ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x1C ),
                     map( ProtocolVersion.MINECRAFT_1_14, 0x1B ),
                     map( ProtocolVersion.MINECRAFT_1_15, 0x1C ),
@@ -305,8 +283,6 @@ public enum Protocol
             TO_SERVER.registerPacket(
                     KeepAlive.class,
                     KeepAlive::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x00 ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x0B ),
                     map( ProtocolVersion.MINECRAFT_1_12, 0x0C ),
                     map( ProtocolVersion.MINECRAFT_1_12_1, 0x0B ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x0E ),
@@ -317,8 +293,6 @@ public enum Protocol
             TO_SERVER.registerPacket(
                     Chat.class,
                     Chat::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x01 ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x02 ),
                     map( ProtocolVersion.MINECRAFT_1_12, 0x03 ),
                     map( ProtocolVersion.MINECRAFT_1_12_1, 0x02 ),
                     map( ProtocolVersion.MINECRAFT_1_14, 0x03 )
@@ -326,8 +300,6 @@ public enum Protocol
             TO_SERVER.registerPacket(
                     TabCompleteRequest.class,
                     TabCompleteRequest::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x14 ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x01 ),
                     map( ProtocolVersion.MINECRAFT_1_12, 0x02 ),
                     map( ProtocolVersion.MINECRAFT_1_12_1, 0x01 ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x05 ),
@@ -336,8 +308,6 @@ public enum Protocol
             TO_SERVER.registerPacket(
                     ClientSettings.class,
                     ClientSettings::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x15 ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x04 ),
                     map( ProtocolVersion.MINECRAFT_1_12, 0x05 ),
                     map( ProtocolVersion.MINECRAFT_1_12_1, 0x04 ),
                     map( ProtocolVersion.MINECRAFT_1_14, 0x05 )
@@ -345,8 +315,6 @@ public enum Protocol
             TO_SERVER.registerPacket(
                     PluginMessage.class,
                     PluginMessage::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x17 ),
-                    map( ProtocolVersion.MINECRAFT_1_9, 0x09 ),
                     map( ProtocolVersion.MINECRAFT_1_12, 0x0A ),
                     map( ProtocolVersion.MINECRAFT_1_12_1, 0x09 ),
                     map( ProtocolVersion.MINECRAFT_1_13, 0x0A ),
@@ -363,23 +331,23 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     StatusResponse.class,
                     StatusResponse::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x00 )
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x00 )
             );
             TO_CLIENT.registerPacket(
                     PingPacket.class,
                     PingPacket::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x01 )
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x01 )
             );
 
             TO_SERVER.registerPacket(
                     StatusRequest.class,
                     StatusRequest::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x00 )
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x00 )
             );
             TO_SERVER.registerPacket(
                     PingPacket.class,
                     PingPacket::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x01 )
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x01 )
             );
         }
     },
@@ -391,22 +359,22 @@ public enum Protocol
             TO_CLIENT.registerPacket(
                     Kick.class,
                     Kick::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x00 )
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x00 )
             );
             TO_CLIENT.registerPacket(
                     EncryptionRequest.class,
                     EncryptionRequest::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x01 )
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x01 )
             );
             TO_CLIENT.registerPacket(
                     LoginSuccess.class,
                     LoginSuccess::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x02 )
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x02 )
             );
             TO_CLIENT.registerPacket(
                     SetCompression.class,
                     SetCompression::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x03 )
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x03 )
             );
             TO_CLIENT.registerPacket(
                     LoginPayloadRequest.class,
@@ -417,12 +385,12 @@ public enum Protocol
             TO_SERVER.registerPacket(
                     LoginRequest.class,
                     LoginRequest::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x00 )
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x00 )
             );
             TO_SERVER.registerPacket(
                     EncryptionResponse.class,
                     EncryptionResponse::new,
-                    map( ProtocolVersion.MINECRAFT_1_8, 0x01 )
+                    map( ProtocolVersion.MINECRAFT_1_12, 0x01 )
             );
             TO_SERVER.registerPacket(
                     LoginPayloadResponse.class,
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/Chat.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/Chat.java
index 9780fb04..c6b06aee 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/Chat.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/Chat.java
@@ -41,7 +41,7 @@ public class Chat extends DefinedPacket
     @Override
     public void read(ByteBuf buf, ProtocolDirection direction, int protocolVersion)
     {
-        message = readString( buf, ( direction == ProtocolDirection.TO_CLIENT ) ? 262144 : ( ProtocolVersion.MINECRAFT_1_11.isBeforeOrEq( protocolVersion ) ? 256 : 100 ) );
+        message = readString( buf, ( direction == ProtocolDirection.TO_CLIENT ) ? 262144 : 256 );
         if ( direction == ProtocolDirection.TO_CLIENT )
         {
             position = buf.readByte();
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ClientSettings.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ClientSettings.java
index 15489048..3c81be75 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ClientSettings.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ClientSettings.java
@@ -32,13 +32,10 @@ public class ClientSettings extends DefinedPacket
     {
         locale = readString( buf, 16 );
         viewDistance = buf.readByte();
-        chatFlags = ProtocolVersion.MINECRAFT_1_9.isBeforeOrEq( protocolVersion ) ? DefinedPacket.readVarInt( buf ) : buf.readUnsignedByte();
+        chatFlags = DefinedPacket.readVarInt( buf );
         chatColours = buf.readBoolean();
         skinParts = buf.readByte();
-        if ( ProtocolVersion.MINECRAFT_1_9.isBeforeOrEq( protocolVersion ) )
-        {
-            mainHand = DefinedPacket.readVarInt( buf );
-        }
+        mainHand = DefinedPacket.readVarInt( buf );
         if ( ProtocolVersion.MINECRAFT_1_17.isBeforeOrEq( protocolVersion ) )
         {
             disableTextFiltering = buf.readBoolean();
@@ -54,19 +51,10 @@ public class ClientSettings extends DefinedPacket
     {
         writeString( locale, buf );
         buf.writeByte( viewDistance );
-        if ( ProtocolVersion.MINECRAFT_1_9.isBeforeOrEq( protocolVersion ) )
-        {
-            DefinedPacket.writeVarInt( chatFlags, buf );
-        } else
-        {
-            buf.writeByte( chatFlags );
-        }
+        DefinedPacket.writeVarInt( chatFlags, buf );
         buf.writeBoolean( chatColours );
         buf.writeByte( skinParts );
-        if ( ProtocolVersion.MINECRAFT_1_9.isBeforeOrEq( protocolVersion ) )
-        {
-            DefinedPacket.writeVarInt( mainHand, buf );
-        }
+        DefinedPacket.writeVarInt( mainHand, buf );
         if ( ProtocolVersion.MINECRAFT_1_17.isBeforeOrEq( protocolVersion ) )
         {
             buf.writeBoolean( disableTextFiltering );
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/Login.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/Login.java
index 2664584e..73f2db3f 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/Login.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/Login.java
@@ -72,12 +72,9 @@ public class Login extends DefinedPacket
                 dimension = readString( buf );
             }
             worldName = readString( buf );
-        } else if ( ProtocolVersion.MINECRAFT_1_9.isBefore( protocolVersion ) )
-        {
-            dimension = buf.readInt();
         } else
         {
-            dimension = (int) buf.readByte();
+            dimension = buf.readInt();
         }
         if ( ProtocolVersion.MINECRAFT_1_15.isBeforeOrEq( protocolVersion ) )
         {
@@ -153,12 +150,9 @@ public class Login extends DefinedPacket
                 writeString( (String) dimension, buf );
             }
             writeString( worldName, buf );
-        } else if ( ProtocolVersion.MINECRAFT_1_9.isBefore( protocolVersion ) )
-        {
-            buf.writeInt( (Integer) dimension );
         } else
         {
-            buf.writeByte( (Integer) dimension );
+            buf.writeInt( (Integer) dimension );
         }
         if ( ProtocolVersion.MINECRAFT_1_15.isBeforeOrEq( protocolVersion ) )
         {
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/TabCompleteRequest.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/TabCompleteRequest.java
index 77fd4d09..48ed5689 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/TabCompleteRequest.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/TabCompleteRequest.java
@@ -46,10 +46,7 @@ public class TabCompleteRequest extends DefinedPacket
 
         if ( ProtocolVersion.MINECRAFT_1_13.isAfter( protocolVersion ) )
         {
-            if ( ProtocolVersion.MINECRAFT_1_9.isBeforeOrEq( protocolVersion ) )
-            {
-                assumeCommand = buf.readBoolean();
-            }
+            assumeCommand = buf.readBoolean();
 
             if ( hasPositon = buf.readBoolean() )
             {
@@ -69,10 +66,7 @@ public class TabCompleteRequest extends DefinedPacket
 
         if ( ProtocolVersion.MINECRAFT_1_13.isAfter( protocolVersion ) )
         {
-            if ( ProtocolVersion.MINECRAFT_1_9.isBeforeOrEq( protocolVersion ) )
-            {
-                buf.writeBoolean( assumeCommand );
-            }
+            buf.writeBoolean( assumeCommand );
 
             buf.writeBoolean( hasPositon );
             if ( hasPositon )
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/Team.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/Team.java
index 4de5b5b7..ab3371dc 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/Team.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/Team.java
@@ -57,10 +57,7 @@ public class Team extends DefinedPacket
             }
             friendlyFire = buf.readByte();
             nameTagVisibility = readString( buf );
-            if ( ProtocolVersion.MINECRAFT_1_9.isBeforeOrEq( protocolVersion ) )
-            {
-                collisionRule = readString( buf );
-            }
+            collisionRule = readString( buf );
             color = ( ProtocolVersion.MINECRAFT_1_13.isBeforeOrEq( protocolVersion ) ) ? readVarInt( buf ) : buf.readByte();
             if ( ProtocolVersion.MINECRAFT_1_13.isBeforeOrEq( protocolVersion ) )
             {
@@ -94,10 +91,7 @@ public class Team extends DefinedPacket
             }
             buf.writeByte( friendlyFire );
             writeString( nameTagVisibility, buf );
-            if ( ProtocolVersion.MINECRAFT_1_9.isBeforeOrEq( protocolVersion ) )
-            {
-                writeString( collisionRule, buf );
-            }
+            writeString( collisionRule, buf );
 
             if ( ProtocolVersion.MINECRAFT_1_13.isBeforeOrEq( protocolVersion ) )
             {
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/Title.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/Title.java
index a130ceed..dc342cec 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/Title.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/Title.java
@@ -41,12 +41,6 @@ public class Title extends DefinedPacket
 
         int index = readVarInt( buf );
 
-        // If we're working on 1.10 or lower, increment the value of the index so we pull out the correct value.
-        if ( ProtocolVersion.MINECRAFT_1_10.isAfterOrEq( protocolVersion ) && index >= 2 )
-        {
-            index++;
-        }
-
         action = Action.values()[index];
         switch ( action )
         {
@@ -74,12 +68,6 @@ public class Title extends DefinedPacket
 
         int index = action.ordinal();
 
-        // If we're working on 1.10 or lower, increment the value of the index so we pull out the correct value.
-        if ( ProtocolVersion.MINECRAFT_1_10.isAfterOrEq( protocolVersion ) && index >= 2 )
-        {
-            index--;
-        }
-
         writeVarInt( index, buf );
         switch ( action )
         {
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index 5c3f525e..e6d395f6 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -228,7 +228,7 @@ public class BungeeCord extends ProxyServer
         logger = io.github.waterfallmc.waterfall.log4j.WaterfallLogger.create();
         // Waterfall end
 
-        String min = ProtocolVersion.MINECRAFT_1_8.getVersionIntroducedIn();
+        String min = ProtocolVersion.values()[2].getVersionIntroducedIn();
         String max = ProtocolVersion.values()[ProtocolVersion.values().length - 1].getMostRecentSupportedVersion();
         logger.info("Booting up proxy server for minecraft " + min + " - " + max); // Amethyst - add logging on startup
         serverStartTime = System.nanoTime(); // Amethyst - add logging on startup
diff --git a/proxy/src/main/java/net/md_5/bungee/UserConnection.java b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
index 712f72a5..4775d562 100644
--- a/proxy/src/main/java/net/md_5/bungee/UserConnection.java
+++ b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
@@ -525,18 +525,10 @@ public final class UserConnection implements ProxiedPlayer
 
         if ( position == ChatMessageType.ACTION_BAR && ProtocolVersion.MINECRAFT_1_17.isAfter( getPendingConnection().getVersion() ) )
         {
-            // Versions older than 1.11 cannot send the Action bar with the new JSON formattings
-            // Fix by converting to a legacy message, see https://bugs.mojang.com/browse/MC-119145
-            if ( ProtocolVersion.MINECRAFT_1_10.isAfterOrEq( getPendingConnection().getVersion() ) )
-            {
-                sendMessage( position, sender, ComponentSerializer.toString( new TextComponent( BaseComponent.toLegacyText( message ) ) ) );
-            } else
-            {
-                net.md_5.bungee.protocol.packet.Title title = new net.md_5.bungee.protocol.packet.Title();
-                title.setAction( net.md_5.bungee.protocol.packet.Title.Action.ACTIONBAR );
-                title.setText( ComponentSerializer.toString( message ) );
-                unsafe.sendPacket( title );
-            }
+            net.md_5.bungee.protocol.packet.Title title = new net.md_5.bungee.protocol.packet.Title();
+            title.setAction( net.md_5.bungee.protocol.packet.Title.Action.ACTIONBAR );
+            title.setText( ComponentSerializer.toString( message ) );
+            unsafe.sendPacket( title );
         } else
         {
             sendMessage( position, sender, ComponentSerializer.toString( message ) );
diff --git a/proxy/src/main/java/net/md_5/bungee/forge/ForgeClientHandler.java b/proxy/src/main/java/net/md_5/bungee/forge/ForgeClientHandler.java
index da9f9343..db152107 100644
--- a/proxy/src/main/java/net/md_5/bungee/forge/ForgeClientHandler.java
+++ b/proxy/src/main/java/net/md_5/bungee/forge/ForgeClientHandler.java
@@ -96,11 +96,6 @@ public class ForgeClientHandler
     {
         state = ForgeClientHandshakeState.HELLO;
 
-        // This issue only exists in Forge 1.8.9
-        if (ProtocolVersion.MINECRAFT_1_8.isEquals(this.con.getPendingConnection().getVersion())) {
-            this.resetAllThePotions(con);
-        }
-
         con.unsafe().sendPacket( ForgeConstants.FML_RESET_HANDSHAKE );
     }
 
-- 
2.36.1.windows.1

