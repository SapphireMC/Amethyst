From 5d0d4d1d37cf9f306e85dace66b2f921722b2a8a Mon Sep 17 00:00:00 2001
From: DenaryDev <denaryplanet@gmail.com>
Date: Sun, 2 Jan 2022 16:07:51 +0500
Subject: [PATCH] Packet checks


diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java b/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java
index ac83e325..cde732f7 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/MinecraftDecoder.java
@@ -38,6 +38,21 @@ public class MinecraftDecoder extends MessageToMessageDecoder<ByteBuf>
         }
 
         Protocol.DirectionData prot = ( server ) ? protocol.TO_SERVER : protocol.TO_CLIENT;
+        // Amethyst start - Check size before decoding
+        if ( prot == protocol.TO_SERVER )
+        {
+            final int readableBytes = in.readableBytes();
+            final int capacity = in.capacity();
+
+            if ( readableBytes > 2097152 )
+            {
+                throw new FastDecoderException( "Error decoding packet with too many readableBytes: " + readableBytes );
+            } else if ( capacity > 2097152 )
+            {
+                throw new FastDecoderException( "Error decoding packet with too big capacity: " + capacity );
+            }
+        }
+        // Amethyst end
         ByteBuf slice = in.copy(); // Can't slice this one due to EntityMap :(
 
         Object packetTypeInfo = null;
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java b/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java
index f8d6becd..6d38de16 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java
@@ -78,6 +78,17 @@ public class HandlerBoss extends ChannelInboundHandlerAdapter
     @Override
     public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception
     {
+        // Amethyst start - Return if channel isn't active
+        if ( !ctx.channel().isActive() )
+        {
+            if ( msg instanceof PacketWrapper )
+            {
+                ( (PacketWrapper) msg ).trySingleRelease();
+            }
+
+            return;
+        }
+        // Amethyst end
         if ( msg instanceof HAProxyMessage )
         {
             HAProxyMessage proxy = (HAProxyMessage) msg;
-- 
2.34.1.windows.1

