From e3c16a09714256e29515eabb8aa1190b97c9673e Mon Sep 17 00:00:00 2001
From: DenaryDev <denaryplanet@gmail.com>
Date: Mon, 10 Jan 2022 18:39:08 +0500
Subject: [PATCH] Add lobby and hub commands


diff --git a/flame/src/main/java/io/sapphiremc/amethyst/conf/AmethystConfig.java b/flame/src/main/java/io/sapphiremc/amethyst/conf/AmethystConfig.java
index 461ef7f7..857b77e7 100644
--- a/flame/src/main/java/io/sapphiremc/amethyst/conf/AmethystConfig.java
+++ b/flame/src/main/java/io/sapphiremc/amethyst/conf/AmethystConfig.java
@@ -45,6 +45,28 @@ public class AmethystConfig extends AbstractYamlConfig {
      */
     public List<String> motdHoverBoxContent = Arrays.asList("&eAmethyst", "", "&7Online: &f%online%", "", "&bServers:", "&8- &7Lobby: &f%online_lobby%", "", "&eexample.net");
 
+    /**
+     * A module that provides the /lobby and /hub commands.
+     */
+    public boolean lobbyEnabled = true;
+    /**
+     * Enable or disable lobby teleport message.
+     */
+    public boolean lobbyMessage = true;
+    /**
+     * List of lobbies.
+     */
+    public List<String> lobbyServers = Collections.singletonList("lobby");
+    /**
+     * Gets random lobby server from lobby servers list.
+     */
+    public String getRandomLobby() {
+        if (lobbyServers == null) return null;
+
+        Random random = new Random();
+        return lobbyServers.get(random.nextInt(lobbyServers.size()));
+    }
+
     /**
      * Enable or disable InitialHandler logging.
      */
@@ -110,6 +132,10 @@ public class AmethystConfig extends AbstractYamlConfig {
         motdHoverBoxEnabled = getBoolean("motd.hoverBox.enabled", motdHoverBoxEnabled);
         motdHoverBoxContent = getStringList("motd.hoverBox.content", motdHoverBoxContent);
 
+        lobbyEnabled = getBoolean("lobby.enabled", lobbyEnabled);
+        lobbyMessage = getBoolean("lobby.message", lobbyMessage);
+        lobbyServers = getStringList("lobby.servers", lobbyServers);
+
         logInitialHandler = getBoolean("logger.initialHandler", logInitialHandler);
         logExceptions = getBoolean("logger.exceptions", logExceptions);
         logHaProxy = getBoolean("logger.haProxy", logHaProxy);
diff --git a/flame/src/main/java/io/sapphiremc/amethyst/conf/MessagesConfig.java b/flame/src/main/java/io/sapphiremc/amethyst/conf/MessagesConfig.java
index 45d561d9..d4f1309a 100644
--- a/flame/src/main/java/io/sapphiremc/amethyst/conf/MessagesConfig.java
+++ b/flame/src/main/java/io/sapphiremc/amethyst/conf/MessagesConfig.java
@@ -28,6 +28,9 @@ public class MessagesConfig extends AbstractYamlConfig {
         formattedMessages.put("command_list_header", ChatColor.translateAlternateColorCodes('&', getString("command.list.header", "Available servers:")));
         formattedMessages.put("command_list", ChatColor.translateAlternateColorCodes('&', getString("command.list.entry", "&a[{0}] &e({1}): &r{2}")));
         formattedMessages.put("total_players", ChatColor.translateAlternateColorCodes('&', getString("command.list.total", "Total players online: {0}")));
+        formattedMessages.put("lobby_success", ChatColor.translateAlternateColorCodes('&', getString("command.lobby.success", "&7&oAttempt to move you to the lobby...")));
+        formattedMessages.put("already_in_lobby", ChatColor.translateAlternateColorCodes('&', getString("command.lobby.error.already-in", "&cYou are already in the lobby!")));
+        formattedMessages.put("lobby_not_found", ChatColor.translateAlternateColorCodes('&', getString("command.lobby.error.not-found", "&cNo lobby servers were found, please inform the server administrator!")));
         formattedMessages.put("command_perms_groups", ChatColor.translateAlternateColorCodes('&', getString("command.perms.groups", "&6You have the following groups: {0}")));
         formattedMessages.put("command_perms_permission", ChatColor.translateAlternateColorCodes('&', getString("command.perms.permissions", "=&9- {0}")));
         formattedMessages.put("command_reload", ChatColor.translateAlternateColorCodes('&', getString("command.reload.success", "&c&lAmethyst has been reloaded. This is NOT advisable and you will not be supported with any issues that arise! Please restart Amethyst ASAP.")));
diff --git a/proxy/src/main/java/io/sapphiremc/amethyst/AmethystModulesManager.java b/proxy/src/main/java/io/sapphiremc/amethyst/AmethystModulesManager.java
index 5d9877b0..e98bae50 100644
--- a/proxy/src/main/java/io/sapphiremc/amethyst/AmethystModulesManager.java
+++ b/proxy/src/main/java/io/sapphiremc/amethyst/AmethystModulesManager.java
@@ -8,6 +8,7 @@ import io.sapphiremc.amethyst.module.CommandFind;
 import io.sapphiremc.amethyst.module.CommandIP;
 import io.sapphiremc.amethyst.module.CommandKick;
 import io.sapphiremc.amethyst.module.CommandList;
+import io.sapphiremc.amethyst.module.CommandLobby;
 import io.sapphiremc.amethyst.module.CommandPerms;
 import io.sapphiremc.amethyst.module.CommandSend;
 import io.sapphiremc.amethyst.module.CommandServer;
@@ -41,6 +42,7 @@ public class AmethystModulesManager {
         if (config.ipEnabled) manager.registerCommand(null, new CommandIP());
         if (config.kickEnabled) manager.registerCommand(null, new CommandKick());
         if (config.listEnabled) manager.registerCommand(null, new CommandList());
+        if (config.lobbyEnabled) manager.registerCommand(null, new CommandLobby());
         if (config.permsEnabled) manager.registerCommand(null, new CommandPerms());
         if (config.sendEnabled) manager.registerCommand(null, new CommandSend());
         if (config.serverEnabled) manager.registerCommand(null, new CommandServer());
diff --git a/proxy/src/main/java/io/sapphiremc/amethyst/module/CommandLobby.java b/proxy/src/main/java/io/sapphiremc/amethyst/module/CommandLobby.java
new file mode 100644
index 00000000..de46cc83
--- /dev/null
+++ b/proxy/src/main/java/io/sapphiremc/amethyst/module/CommandLobby.java
@@ -0,0 +1,37 @@
+package io.sapphiremc.amethyst.module;
+
+import io.sapphiremc.amethyst.Amethyst;
+import io.sapphiremc.amethyst.conf.AmethystConfig;
+import net.md_5.bungee.api.CommandSender;
+import net.md_5.bungee.api.ProxyServer;
+import net.md_5.bungee.api.connection.ProxiedPlayer;
+import net.md_5.bungee.api.plugin.Command;
+
+public class CommandLobby extends Command {
+
+    public CommandLobby() {
+        super("lobby", "bungeecord.command.lobby", "hub");
+    }
+
+    @Override
+    public void execute(CommandSender sender, String[] args) {
+        if (sender instanceof ProxiedPlayer) {
+            AmethystConfig config = Amethyst.getInstance().getConfig();
+            if (!config.lobbyServers.isEmpty()) {
+                ProxiedPlayer player = (ProxiedPlayer) sender;
+                if (!config.lobbyServers.contains(player.getServer().getInfo().getName())) {
+                    player.connect(ProxyServer.getInstance().getServerInfo(config.getRandomLobby()));
+                    if (config.lobbyMessage) {
+                        player.sendMessage(ProxyServer.getInstance().getTranslation("lobby_success"));
+                    }
+                } else {
+                    sender.sendMessage(ProxyServer.getInstance().getTranslation("already_in_lobby"));
+                }
+            } else {
+                sender.sendMessage(ProxyServer.getInstance().getTranslation("lobby_not_found"));
+            }
+        } else {
+            sender.sendMessage(ProxyServer.getInstance().getTranslation("player_only"));
+        }
+    }
+}
-- 
2.37.1.windows.1

